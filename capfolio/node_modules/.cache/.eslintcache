[{"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\projectView.js":"3","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\AuthContext.js":"4","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\ScrollToTop.js":"5","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\Admin.js":"6","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\AdminProjectView.js":"7","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\projectSubmit.js":"8","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\Navbar.js":"9","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\Home.js":"10","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\Login.js":"11","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\SignUp.js":"12","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\ResetPassword.js":"13","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\CodeConfirmation.js":"14","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\Profile.js":"15","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\likeButton.js":"16","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\ProjectGallery.js":"17","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\ProjectIntro.js":"18","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\ProjectTabs.js":"19","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\getMainImage.js":"20","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\awardBanner.js":"21","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\Search.js":"22","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\Sidebar.js":"23","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\CSidebar.js":"24","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\SearchBar.js":"25"},{"size":864,"mtime":1682604760129,"results":"26","hashOfConfig":"27"},{"size":1592,"mtime":1684986248219,"results":"28","hashOfConfig":"27"},{"size":9378,"mtime":1685090552045,"results":"29","hashOfConfig":"27"},{"size":935,"mtime":1682410870495,"results":"30","hashOfConfig":"27"},{"size":287,"mtime":1681798031900,"results":"31","hashOfConfig":"27"},{"size":3769,"mtime":1684986248217,"results":"32","hashOfConfig":"27"},{"size":16561,"mtime":1684986248218,"results":"33","hashOfConfig":"27"},{"size":17096,"mtime":1685088791971,"results":"34","hashOfConfig":"27"},{"size":4945,"mtime":1684986248220,"results":"35","hashOfConfig":"27"},{"size":200,"mtime":1683540365035,"results":"36","hashOfConfig":"27"},{"size":3288,"mtime":1684209070036,"results":"37","hashOfConfig":"27"},{"size":4604,"mtime":1684209070039,"results":"38","hashOfConfig":"27"},{"size":2744,"mtime":1684209070038,"results":"39","hashOfConfig":"27"},{"size":1258,"mtime":1684209070035,"results":"40","hashOfConfig":"27"},{"size":11903,"mtime":1684986248230,"results":"41","hashOfConfig":"27"},{"size":4240,"mtime":1685087592682,"results":"42","hashOfConfig":"27"},{"size":7946,"mtime":1685090719960,"results":"43","hashOfConfig":"27"},{"size":1186,"mtime":1683198952606,"results":"44","hashOfConfig":"27"},{"size":8998,"mtime":1685091047321,"results":"45","hashOfConfig":"27"},{"size":1506,"mtime":1684986248222,"results":"46","hashOfConfig":"27"},{"size":1635,"mtime":1683194874396,"results":"47","hashOfConfig":"27"},{"size":947,"mtime":1683685816943,"results":"48","hashOfConfig":"27"},{"size":7966,"mtime":1684490204944,"results":"49","hashOfConfig":"27"},{"size":7953,"mtime":1684496547917,"results":"50","hashOfConfig":"27"},{"size":1020,"mtime":1682245082110,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f4t8by",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\index.js",[],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\App.js",[],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\projectView.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],[],"import { Collapse, CButton } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport \"react-slideshow-image/dist/styles.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport ProjectTabs from \"./components/ProjectTabs\";\r\nimport LikeButton from \"./components/likeButton\";\r\nimport gitHubLogo from \"./images/github-mark-white.png\";\r\nimport { ReactComponent as Heart } from \"./images/heart.svg\";\r\nimport { ReactComponent as Views } from \"./images/views.svg\";\r\nimport AwardBanner from \"./components/awardBanner.js\";\r\nimport \"./projectView.css\";\r\n\r\nconst ProjectView = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [responses, setResponses] = useState([]);\r\n  const params = useParams();\r\n  const [comments, setComments] = useState(\"\");\r\n  const [projects, setProject] = useState(\"\");\r\n  const [tech, setTech] = useState(\"\");\r\n  const [user, setUser] = useState(\"\");\r\n  const [img, setImage] = useState([]);\r\n  const [lowRes, setLowRes] = useState();\r\n  const [students, setStudents] = useState([]);\r\n\r\n  // const blueBoxRef = useRef();\r\n\r\n  const getProject = async () => {\r\n    const response = await fetch(\"/projects/project?id=\" + params.id).then(\r\n      (response) => response.json()\r\n    );\r\n\r\n    const files = await fetch(`/project/listTeamFiles/${response[0].TeamId}`);\r\n    const data = await files.json();\r\n    setProject(response);\r\n\r\n    let string = response[0].technologies.split(\",\");\r\n    setTech(string);\r\n\r\n    // Assuming you have the data stored in a variable called 'responseData'\r\n    const processedUsers = response.map((item) => ({\r\n      name: item.studentNames.split(\",\"),\r\n      upi: item.studentUPIs.split(\",\"),\r\n    }));\r\n    console.log(processedUsers);\r\n    setStudents(processedUsers);\r\n\r\n    // Get all the images for the slideshow//\r\n    const filteredFiles = data.filter((file) => !file.endsWith(\"/\"));\r\n    console.log(filteredFiles);\r\n    const url = \"https://capfoliostorage.s3.ap-southeast-2.amazonaws.com/\";\r\n\r\n    const firstElement = filteredFiles[0];\r\n    const lastSlashIndex = firstElement.lastIndexOf(\"/\");\r\n\r\n    const folder = firstElement.substring(0, lastSlashIndex);\r\n    const filename = firstElement.substring(lastSlashIndex);\r\n\r\n    const reposnceArray = [];\r\n    for (let i = 0; i < filteredFiles.length; i++) {\r\n      let getHighRes = \"\";\r\n      getHighRes = url + filteredFiles[i];\r\n      reposnceArray.push(getHighRes);\r\n    }\r\n    console.log(reposnceArray);\r\n    setImage(reposnceArray);\r\n    //=====================================//\r\n  };\r\n\r\n  // Function to collect data\r\n  const getComments = async () => {\r\n    const response = await fetch(\"/projects/comment?id=\" + params.id).then(\r\n      (response) => response.json()\r\n    );\r\n\r\n    setComments(response);\r\n\r\n    const userID = await fetch(\"/auth/user\").then((userID) => userID.json());\r\n\r\n    setUser(userID.UserID);\r\n    console.log(response);\r\n  };\r\n\r\n  //-----------------------------------------------------------------//\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getProject();\r\n  }, []);\r\n\r\n  const buttonStyle = {\r\n    width: \"30px\",\r\n    background: \"none\",\r\n    border: \"0px\",\r\n    class: \"arrows\",\r\n  };\r\n\r\n  const properties = {\r\n    prevArrow: (\r\n      <button style={{ ...buttonStyle }}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n          fill=\"#fff\"\r\n        >\r\n          <path d=\"M242 180.6v-138L0 256l242 213.4V331.2h270V180.6z\" />\r\n        </svg>\r\n      </button>\r\n    ),\r\n    nextArrow: (\r\n      <button style={{ ...buttonStyle }}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n          fill=\"#fff\"\r\n        >\r\n          <path d=\"M512 256L270 42.6v138.2H0v150.6h270v138z\" />\r\n        </svg>\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  const Slideshow = () => {\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      autoplay: true,\r\n      autoplaySpeed: 3000,\r\n    };\r\n    return (\r\n      <Slider className=\"slideshow\" {...settings}>\r\n        {console.log(img)}\r\n        {img.map((response, index) => (\r\n          <div className=\"each-slide-effect\" key={index}>\r\n            <div\r\n              style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <img src={response} alt={`Slide ${index + 1}`} />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    );\r\n  };\r\n\r\n  const Header = ({ project }) => {\r\n    return (\r\n      <div className=\"titlePanel\">\r\n        <AwardBanner key={project.TeamName} text={project.AwardName} />\r\n        <div className=\"centerTitle\">\r\n          <p className=\"semesterTag\">\r\n            {project.capstoneYear} Semester {project.capstoneSemester}\r\n          </p>\r\n          <p className=\"projecttitle\">{project.ProjectName}</p>\r\n          <div className=\"names\">\r\n            <p className=\"companyname\">By {project.TeamName}</p>\r\n\r\n            {/*{project.authors.map((name, i) =>*/}\r\n            {/*    <div classname='name'>*/}\r\n            {/*        <p key={`key${i}`}>{name},&nbsp;</p>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n\r\n            {students.map((user, index) => (\r\n              //user.upi\r\n              <div className=\"name\" key={index}>\r\n                <p>{user.name.join(\", \")}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <p className=\"proj-desc\">{project.ProjectIntro}</p>\r\n        </div>\r\n\r\n\r\n        <div className=\"sidePanel-mobile\">\r\n          <div className=\"centerTitle\">\r\n            <div className=\"project-stats\">\r\n              <p>\r\n                {\" \"}\r\n                <Heart /> {params.id}{\" \"}\r\n              </p>\r\n              <p>\r\n                {\" \"}\r\n                <Views /> {project.viewCount}{\" \"}\r\n              </p>\r\n            </div>\r\n            <div className=\"names\">\r\n              {/*{project.authors.map((name, i) =>*/}\r\n              {/*    <div classname='name'>*/}\r\n              {/*        <p key={`key${i}`}>{name},&nbsp;</p>*/}\r\n              {/*    </div>*/}\r\n              {/*)}*/}\r\n            </div>\r\n          </div>\r\n          <div className=\"techUsed\">\r\n            {tech &&\r\n              tech.map((tech, i) => (\r\n                <div className=\"tech\">\r\n                  <p key={`Key${i}`}>{tech}</p>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ProjectSidePanel = ({ project }) => {\r\n    return (\r\n      <div className=\"sidePanel\">\r\n        <div className=\"centerTitle\">\r\n        <div className=\"project-stats\">\r\n            <p>\r\n              {\" \"}\r\n              <Heart /> {params.id}{\" \"}\r\n            </p>\r\n            <p>\r\n              {\" \"}\r\n              <Views /> {project.viewCount}{\" \"}\r\n            </p>\r\n          </div>\r\n        <div className=\"pv-buttons\">\r\n          <CButton>\r\n            {\" \"}\r\n            <a href={project.githubLink} target=\"_blank\">\r\n              {\" \"}\r\n              <img src={gitHubLogo}></img> GitHub\r\n            </a>\r\n          </CButton>\r\n          <div>\r\n            <div className=\"pv-likeButton\">\r\n              <LikeButton likenumber={params.id} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n          <div className=\"names\">\r\n            {/*{project.authors.map((name, i) =>*/}\r\n            {/*    <div classname='name'>*/}\r\n            {/*        <p key={`key${i}`}>{name},&nbsp;</p>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n          </div>\r\n        </div>\r\n        <div className=\"techUsed\">\r\n          {tech &&\r\n            tech.map((tech, i) => (\r\n              <div className=\"tech\">\r\n                <p key={`Key${i}`}>{tech}</p>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bluebox\">\r\n        <div className=\"p-row\">\r\n          <div className=\"column headerleft\">\r\n            <div className=\"image\">\r\n              <Slideshow />\r\n            </div>\r\n          </div>\r\n          <div className=\"column headerright\">\r\n            <div className=\"teammembers\">\r\n              {projects &&\r\n                projects.map((project) => (\r\n                  <Header key={project.id} project={project} />\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"projectInformation-wrapper\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <div className=\"projectTabs\" style={{ width: \"75%\" }}>\r\n            <ProjectTabs\r\n              projects={projects}\r\n              comments={comments}\r\n              user={user}\r\n              getComments={getComments}\r\n            />\r\n          </div>\r\n          <div className=\"sidepanel-div\" style={{ width: \"25%\" }}>\r\n            {projects &&\r\n              projects.map((project) => (\r\n                <ProjectSidePanel key={project.id} project={project} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectView;\r\n","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\AuthContext.js",[],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\ScrollToTop.js",[],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\Admin.js",[],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\AdminProjectView.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],[],"import { Collapse, CButton } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport \"react-slideshow-image/dist/styles.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport LikeButton from \"./components/likeButton\";\r\nimport gitHubLogo from \"./images/github-mark-white.png\";\r\nimport { ReactComponent as Heart } from \"./images/heart.svg\";\r\nimport { ReactComponent as Views } from \"./images/views.svg\";\r\nimport \"./projectView.css\";\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Stack from '@mui/material/Stack';\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport Select from \"react-select\";\r\nimport AWS from \"aws-sdk\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst bucketName = \"capfoliostorage\";\r\nconst bucketRegion = \"ap-southeast-2\";\r\nconst accessKeyId = \"YOUR_ACCESS_KEY_ID\";\r\nconst secretAccessKey = \"YOUR_SECRET_ACCESS_KEY\";\r\n\r\nconst s3 = new AWS.S3({\r\n  region: bucketRegion,\r\n  accessKeyId: accessKeyId,\r\n  secretAccessKey: secretAccessKey,\r\n});\r\n\r\nconst AdminProjectView = () => {\r\n  const [data, setData] = useState([]);\r\n  const [responses, setResponses] = useState([]);\r\n  const params = useParams();\r\n  const [projects, setProject] = useState(\"\");\r\n  const [tech, setTech] = useState(\"\");\r\n\r\n  const getProject = async () => {\r\n    const response = await fetch(\"/projects/project?id=\" + params.id).then(\r\n      (response) => response.json()\r\n    );\r\n\r\n    fetch(\"/project/listTeamFiles/\" + response[0].TeamName)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setData(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was a problem fetching the data:\", error);\r\n      });\r\n\r\n    let string = response[0].technologies.split(\",\");\r\n    setProject(response);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchResponses = async () => {\r\n      const responseArray = [];\r\n\r\n      for (const element of data) {\r\n        const response = await fetch(`/project/retrieveFile/${element}`);\r\n        const data = await response.text();\r\n        responseArray.push(data);\r\n      }\r\n      console.log(responseArray);\r\n      setResponses(responseArray);\r\n    };\r\n\r\n    fetchResponses();\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    getProject();\r\n  }, []);\r\n\r\n  const buttonStyle = {\r\n    width: \"30px\",\r\n    background: \"none\",\r\n    border: \"0px\",\r\n    class: \"arrows\",\r\n  };\r\n\r\n  const properties = {\r\n    prevArrow: (\r\n      <button style={{ ...buttonStyle }}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n          fill=\"#fff\"\r\n        >\r\n          <path d=\"M242 180.6v-138L0 256l242 213.4V331.2h270V180.6z\" />\r\n        </svg>\r\n      </button>\r\n    ),\r\n    nextArrow: (\r\n      <button style={{ ...buttonStyle }}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n          fill=\"#fff\"\r\n        >\r\n          <path d=\"M512 256L270 42.6v138.2H0v150.6h270v138z\" />\r\n        </svg>\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  const Slideshow = () => {\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      autoplay: true,\r\n      autoplaySpeed: 3000,\r\n    };\r\n    return (\r\n      <Slider className=\"slideshow\" {...settings}>\r\n        {responses.map((response, index) => (\r\n          <div className=\"each-slide-effect\" key={index}>\r\n            <div\r\n              style={{\r\n                backgroundImage: `url(${response})`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    );\r\n  };\r\n\r\n  const Header = ({ project }) => {\r\n    const [capstoneYear, setCapstoneYear] = useState('');\r\n    const [capstoneSemester, setCapstoneSemester] = useState('');\r\n    const [ProjectName, setProjectName] = useState(''); \r\n    const [TeamName, setTeamName] = useState('');\r\n    const [githubLink, setgithubLink] = useState('');\r\n    const [VideoLink, setVideoLink] = useState('');\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setProjectName(projects && projects.map((project) => project.ProjectName).join(' '));\r\n        setTeamName(projects && projects.map((project) => project.TeamName).join(' '));\r\n        setCapstoneYear(projects && projects.map((project) => project.capstoneYear).join(' '));\r\n        setCapstoneSemester(projects && projects.map((project) => project.capstoneSemester).join(' '));\r\n        setVideoLink(projects && projects.map((project) => project.VideoLink).join(' '));\r\n        setgithubLink(projects && projects.map((project) => project.githubLink).join(' '));\r\n      }, [projects]);\r\n\r\n    \r\n    const handleEdit = () => {\r\n        setIsEditing(true);\r\n    };\r\n  \r\n    const handleSave = () => {\r\n        // Save the edited project information\r\n        console.log({\r\n            ProjectName: ProjectName,\r\n            TeamName: TeamName,\r\n            capstoneYear: capstoneYear,\r\n            capstoneSemester: capstoneSemester\r\n        });\r\n    \r\n        // Perform the necessary saving logic here\r\n    \r\n        // Reset the editing state\r\n        setIsEditing(false);\r\n        };\r\n  \r\n    return (\r\n      <div className=\"titlePanel\">\r\n        <div className=\"centerTitle\">\r\n          <p className=\"semesterTag\">\r\n            {isEditing ? (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  value={capstoneYear}\r\n                  onChange={(e) => setCapstoneYear(e.target.value)}\r\n                />\r\n                Semester{' '}\r\n                <input\r\n                  type=\"text\"\r\n                  value={capstoneSemester}\r\n                  onChange={(e) => setCapstoneSemester(e.target.value)}\r\n                />\r\n              </>\r\n            ) : (\r\n              `${capstoneYear} Semester ${capstoneSemester}`\r\n            )}\r\n          </p>\r\n          <p className=\"projecttitle\">\r\n            {isEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                value={ProjectName}\r\n                onChange={(e) => setProjectName(e.target.value)}\r\n              />\r\n            ) : (\r\n              ProjectName\r\n            )}\r\n          </p>\r\n          <div className=\"names\">\r\n            <p className=\"companyname\">\r\n              By{' '}\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"text\"\r\n                  value={TeamName}\r\n                  onChange={(e) => setTeamName(e.target.value)}\r\n                />\r\n              ) : (\r\n                TeamName\r\n              )}\r\n            </p>\r\n          </div>\r\n          <p className=\"proj-desc\">{project.ProjectIntro}</p>\r\n          <div className=\"pv-buttons\">\r\n          {\" \"}\r\n          {isEditing ? (\r\n            <input\r\n              type=\"text\"\r\n              value={project.githubLink}\r\n              onChange={(e) => setgithubLink(e.target.value)}\r\n            />\r\n          ) : (\r\n            <CButton>\r\n            <a href={project.githubLink} target=\"_blank\" rel=\"noreferrer\">\r\n              <img src={gitHubLogo} alt=\"GitHub Logo\" /> GitHub\r\n            </a>\r\n            </CButton>\r\n          )}\r\n          {\" \"}\r\n          {isEditing ? (\r\n            <input\r\n              type=\"text\"\r\n              value={project.VideoLink}\r\n              onChange={(e) => setVideoLink(e.target.value)}\r\n            />\r\n          ) : (\r\n            <CButton>\r\n            <a href={project.VideoLink} target=\"_blank\" rel=\"noreferrer\">\r\n              <YouTubeIcon /> YouTube\r\n            </a>\r\n            </CButton>\r\n          )}\r\n          \r\n        </div>\r\n    </div>\r\n  \r\n        <div className=\"pv-buttons\">\r\n          {isEditing ? (\r\n            <button onClick={handleSave} className=\"btn btn-primary\">Save</button>\r\n          ) : (\r\n            <button onClick={handleEdit} className=\"btn btn-primary\">Edit</button>\r\n          )}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const ProjectSidePanel = ({ project }) => {\r\n    const [technologies, setTechnologies] = useState([]);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [selectedTechnologies, setSelectedTechnologies] = useState([]);\r\n    const [selectedAwards, setSelectedAwards] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      fetch(\"/project/technologyNames\")\r\n        .then((response) => response.json())\r\n        .then((data) => setTechnologies(data))\r\n        .catch((error) => console.error(error));\r\n    }, []);\r\n  \r\n    const techOptions = technologies.map((techy) => ({\r\n      value: techy,\r\n      label: techy,\r\n    }));\r\n  \r\n    const awarded = [\r\n      { value: \"None\", label: \"None\" },\r\n      { value: \"Excellence Award\", label: \"Excellence Award\" },\r\n      { value: \"Community Award\", label: \"Community Award\" },\r\n      { value: \"People's Choice Award\", label: \"People's Choice Award\" },\r\n    ];\r\n  \r\n    const handleChangeTechnologies = (selectedTechnologies) => {\r\n      setSelectedTechnologies(selectedTechnologies);\r\n    };\r\n  \r\n    const handleChangeAwards = (selectedAwards) => {\r\n      setSelectedAwards(selectedAwards);\r\n    };\r\n  \r\n    const handleEdit = () => {\r\n      setIsEditing(true);\r\n    };\r\n  \r\n    const handleSave = () => {\r\n      // Save the edited project information\r\n      console.log({\r\n        selectedTechnologies,\r\n        selectedAwards,\r\n      });\r\n  \r\n      // Perform the necessary saving logic here\r\n  \r\n      // Reset the editing state\r\n      setIsEditing(false);\r\n    };\r\n  \r\n    return (\r\n      <div className=\"sidePanel\">\r\n        <div className=\"centerTitle\">\r\n          <div className=\"names\"></div>\r\n        </div>\r\n        <div className=\"techUsed\">\r\n          {isEditing ? (\r\n            <CreatableSelect\r\n              required\r\n              className=\"formLinks\"\r\n              id=\"tech\"\r\n              isMulti\r\n              options={techOptions}\r\n              maxMenuHeight={250}\r\n              onChange={handleChangeTechnologies}\r\n              placeholder=\"Select from the drop down or type the technologies you used in the project\"\r\n            />\r\n          ) : (\r\n            selectedTechnologies.map((tech, i) => (\r\n              <div className=\"tech\" key={`TechKey${i}`}>\r\n                <p>{tech.value}</p>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n        <div className=\"techUsed\">\r\n          {isEditing ? (\r\n            <CreatableSelect\r\n              required\r\n              className=\"formLinks\"\r\n              id=\"awards\"\r\n              isMulti\r\n              options={awarded}\r\n              maxMenuHeight={250}\r\n              onChange={handleChangeAwards}\r\n              placeholder=\"Select or type the awards for the project\"\r\n            />\r\n          ) : (\r\n            selectedAwards.map((award, i) => (\r\n              <div className=\"tech\" key={`AwardKey${i}`}>\r\n                <p>{award.value}</p>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n        <div className=\"pv-buttons\">\r\n          {isEditing ? (\r\n            <button onClick={handleSave} className=\"btn btn-primary\">\r\n              Save\r\n            </button>\r\n          ) : (\r\n            <button onClick={handleEdit} className=\"btn btn-primary\">\r\n              Edit\r\n            </button>\r\n          )}\r\n        </div>\r\n        <ApproveOrDelete />\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  const ApproveOrDelete = ({}) =>{\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20px\", // Adjust the margin value as needed\r\n          }}> \r\n            <Stack direction=\"row\" spacing={2}>\r\n                <Button variant=\"outlined\" startIcon={<DeleteIcon />}  color=\"error\">\r\n                    Delete\r\n                </Button>\r\n                <Button variant=\"contained\" endIcon={<SendIcon />} color=\"success\">\r\n                    Approve\r\n                </Button>\r\n            </Stack>\r\n        </div>\r\n      );\r\n  }\r\n  const AdminProjectTabs = ({ projects }) => {\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const [projectIntro, setProjectIntro] = useState('');\r\n  const [projectApproach, setProjectApproach] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setProjectIntro(projects && projects.map((project) => project.ProjectIntro).join(' '));\r\n    setProjectApproach(projects && projects.map((project) => project.Project_Approach).join(' '));\r\n  }, [projects]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setSelectedTab(newValue);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Save the edited project information\r\n    console.log({\r\n      projectIntro: projectIntro,\r\n      projectApproach: projectApproach\r\n    });\r\n\r\n    // Perform the necessary saving logic here\r\n\r\n    // Reset the editing state\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Tabs\r\n        value={selectedTab}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        variant=\"fullWidth\"\r\n      >\r\n        <Tab label=\"About Project\" />\r\n        <Tab label=\"Project Poster\" />\r\n      </Tabs>\r\n      {selectedTab === 0 && (\r\n        <div className=\"projectInformation\">\r\n          <h2>\r\n            About {projects && projects.map((project) => project.ProjectName)}\r\n          </h2>\r\n          {isEditing ? (\r\n            <textarea\r\n              value={projectIntro}\r\n              onChange={(event) => setProjectIntro(event.target.value)}\r\n            ></textarea>\r\n          ) : (\r\n            <p className=\"about\">{projectIntro}</p>\r\n          )}\r\n          <h2>Project Approach</h2>\r\n          {isEditing ? (\r\n            <textarea\r\n              value={projectApproach}\r\n              onChange={(event) => setProjectApproach(event.target.value)}\r\n            ></textarea>\r\n          ) : (\r\n            <p className=\"projectApproach\">{projectApproach}</p>\r\n          )}\r\n          {isEditing ? (\r\n            <button onClick={handleSave} className=\"btn btn-primary\">Save</button>\r\n          ) : (\r\n            <button onClick={handleEdit} className=\"btn btn-primary\">Edit</button>\r\n          )}\r\n        </div>\r\n      )}\r\n      {selectedTab === 1 && (\r\n        <div className=\"projectInformation\">\r\n          <h2>\r\n            This project poster will be displayed here.\r\n            <br></br>\r\n          </h2>\r\n        </div>\r\n      )}\r\n    </Box>\r\n  );\r\n  }\r\n  return (\r\n    <div>\r\n          <div className=\"bluebox\">\r\n              <div className=\"p-row\">\r\n                  <div className=\"column headerleft\">\r\n                      <div className=\"image\">\r\n                          <Slideshow />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"column headerright\">\r\n                      <div className=\"teammembers\">\r\n                          {projects &&\r\n                              projects.map((project) => (\r\n                                  <Header key={project.id} project={project} />\r\n                              ))}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div className=\"projectInformation-wrapper\">\r\n              <div style={{ display: \"flex\" }}>\r\n                  <div className=\"projectTabs\" style={{ width: \"75%\" }}>\r\n                      <AdminProjectTabs\r\n                          projects={projects} />\r\n                  </div>\r\n                  <div className=\"sidepanel-div\" style={{ width: \"25%\" }}>\r\n                      {projects &&\r\n                          projects.map((project) => (\r\n                              <ProjectSidePanel key={project.id} project={project} />\r\n                          ))}\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default AdminProjectView;\r\n\r\n///og thats working ","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\projectSubmit.js",["172","173","174","175","176"],[],"import AWS from \"aws-sdk\";\r\nimport { MDBBtn, MDBInput, MDBTextArea } from \"mdb-react-ui-kit\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport \"./projectSubmit.css\";\r\n\r\nimport { CCol, CRow } from \"@coreui/react\";\r\n\r\nconst bucketName = \"capfoliostorage\";\r\nconst bucketRegion = \"ap-southeast-2\";\r\nconst accessKeyId = \"AKIAUDUQU75VEF3VDCEL\";\r\nconst secretAccessKey = \"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\";\r\n\r\nconst s3 = new AWS.S3({\r\n  region: bucketRegion,\r\n  accessKeyId: accessKeyId,\r\n  secretAccessKey: secretAccessKey,\r\n});\r\n\r\nconst resizeFile = (file) =>\r\n  new Promise((resolve) => {\r\n    Resizer.imageFileResizer(\r\n      file,\r\n      352,\r\n      240,\r\n      \"JPEG\",\r\n      10,\r\n      0,\r\n      (uri) => {\r\n        resolve(uri);\r\n      },\r\n      \"file\"\r\n    );\r\n  });\r\n\r\nexport default function ProjectSubmit() {\r\n  const years = [\r\n    { value: \"2017\", label: \"2017\" },\r\n    { value: \"2018\", label: \"2018\" },\r\n    { value: \"2019\", label: \"2019\" },\r\n    { value: \"2020\", label: \"2020\" },\r\n    { value: \"2021\", label: \"2021\" },\r\n    { value: \"2022\", label: \"2022\" },\r\n    { value: \"2023\", label: \"2023\" },\r\n  ];\r\n\r\n  const semester = [\r\n    { value: \"1\", label: \"Semester One\" },\r\n    { value: \"2\", label: \"Semester Two\" },\r\n  ];\r\n\r\n  const config = {\r\n    bucketName: \"capfoliostorage\",\r\n    region: \"ap-southeast-2\",\r\n    accessKeyId: \"AKIAUDUQU75VEF3VDCEL\",\r\n    secretAccessKey: \"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\",\r\n  };\r\n\r\n  function makeid(length) {\r\n    let result = \"\";\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    const charactersLength = characters.length;\r\n    let counter = 0;\r\n    while (counter < length) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n      counter += 1;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const checkIfStringExists = (str) => {\r\n    return fetchTeamIDs.includes(str);\r\n  };\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  //-------------------Handles the users being added--------------------//\r\n\r\n  const [users, setUsers] = useState([\r\n    { upi: \"\", FirstName: \"\", lastName: \"\" },\r\n  ]);\r\n\r\n  const handleUserChange = (index, field, value) => {\r\n    const updatedUsers = [...users];\r\n    updatedUsers[index] = { ...updatedUsers[index], [field]: value };\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  const handleAddUser = () => {\r\n    setUsers([...users, { upi: \"\", FirstName: \"\", lastName: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveUser = (index) => {\r\n    const updatedUsers = [...users];\r\n    updatedUsers.splice(index, 1);\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  //---------------------------------------------------------------------//\r\n\r\n  const [technologies, setTechnologies] = useState([]);\r\n  const [fetchTeamIDs, setFetchTeamIDs] = useState([]);\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Fetch the technologies from the database and update state\r\n    fetch(\"/project/technologyNames\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTechnologies(data))\r\n      .catch((error) => console.error(error));\r\n\r\n    //Get the array of existing teamID's\r\n    fetch(\"/project/projectTeamId\")\r\n      .then((response) => response.json())\r\n      .then((data) => setFetchTeamIDs(data))\r\n      .catch((error) => console.log(error));\r\n\r\n    // Get the ID of the current logged in user\r\n    fetch(\"/auth/user\")\r\n      .then((response) => response.json())\r\n      .then((user) => setUser(user.UserID))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const techOptions = technologies.map((tech) => ({\r\n    value: tech,\r\n    label: tech,\r\n  }));\r\n\r\n  //Has all the set states\r\n  const [selectedYears, setSelectedYears] = useState([]);\r\n  const handleChangeYears = (selectedYears) => {\r\n    setSelectedYears(selectedYears);\r\n  };\r\n\r\n  const [selectedSemesters, setSelectedSemesters] = useState([]);\r\n  const handleChangeSemesters = (selectedSemesters) => {\r\n    setSelectedSemesters(selectedSemesters);\r\n  };\r\n\r\n  const [selectedTechnologies, setSelectedTechnologies] = useState([]);\r\n  const handleChangeTechnologies = (selectedTechnologies) => {\r\n    setSelectedTechnologies(selectedTechnologies);\r\n  };\r\n\r\n  const [selectedTeam, setSelectedTeam] = useState([]);\r\n  const handleChangeTeam = (selectedTeam) => {\r\n    setSelectedTeam(selectedTeam);\r\n  };\r\n\r\n  const [images, setImages] = useState([]);\r\n  const handleImageChange = (event) => {\r\n    const selectedImages = Array.from(event.target.files);\r\n    setImages([...images, ...selectedImages]);\r\n  };\r\n  const handleRemoveImage = (index) => {\r\n    const newImages = [...images];\r\n    newImages.splice(index, 1);\r\n    setImages(newImages);\r\n  };\r\n\r\n  const [pdf, setPDF] = useState([]);\r\n  const handlePDFUpload = (event) => {\r\n    const selectdPDF = Array.from(event.target.files);\r\n    setPDF(selectdPDF);\r\n  };\r\n\r\n  const [text1, setText1] = useState(\"\");\r\n  function handleText1Input(event) {\r\n    const inputText = event.target.value;\r\n    if (inputText.length <= 5000) {\r\n      setText1(inputText);\r\n    }\r\n  }\r\n\r\n  const [text2, setText2] = useState(\"\");\r\n  function handleText2Input(event) {\r\n    const inputText = event.target.value;\r\n    if (inputText.length <= 5000) {\r\n      setText2(inputText);\r\n    }\r\n  }\r\n\r\n  const [text3, setText3] = useState(\"\");\r\n  function handleText3Input(event) {\r\n    const inputText = event.target.value;\r\n    if (inputText.length <= 5000) {\r\n      setText3(inputText);\r\n    }\r\n  }\r\n\r\n  const counterClassName = (text) =>\r\n    text.length >= 5000 ? \"characterCount max\" : \"characterCount\";\r\n\r\n  const thumbnailClassName = (length) =>\r\n    length < 1 ? \"noDisplayThumbnail\" : \"AlldisplayThumbnail\";\r\n\r\n  // Handles submitting the form\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    let teamID = makeid(16);\r\n\r\n    while (checkIfStringExists(teamID)) {\r\n      teamID = makeid(teamID);\r\n    }\r\n\r\n    //------------------Format the data -----------------------------------------//\r\n\r\n    const TeamName = document.getElementById(\"company\").value;\r\n    const projectName = document.getElementById(\"projectName\").value;\r\n    const capstoneYear = selectedYears;\r\n    const capstoneSemester = selectedSemesters;\r\n    const ProjectIntro = document.getElementById(\"intro\").value;\r\n    const Project_About = document.getElementById(\"about\").value;\r\n    const Project_Approach = document.getElementById(\"approach\").value;\r\n    const tech = selectedTechnologies;\r\n    const teamMembers = selectedTeam;\r\n    const VideoLink = document.getElementById(\"yt\").value;\r\n    const githubLink = document.getElementById(\"github\").value;\r\n\r\n    const arrayTech = [];\r\n    const usersArray = [];\r\n\r\n    tech.forEach((e) => arrayTech.push(e.label));\r\n\r\n    for (let i = 0; i < arrayTech.length; i++) {\r\n      arrayTech[i] = arrayTech[i].replace(/'/g, '\"');\r\n    }\r\n\r\n    teamMembers.forEach((e) => usersArray.push(e.label));\r\n    for (let i = 0; i < usersArray.length; i++) {\r\n      usersArray[i] = usersArray[i].replace(/'/g, '\"');\r\n    }\r\n\r\n    let yearString = capstoneYear.value;\r\n\r\n    let semesterString = capstoneSemester.label;\r\n    if (semesterString == \"Semester One\") {\r\n      semesterString = 1;\r\n    } else {\r\n      semesterString = 2;\r\n    }\r\n\r\n    let newLink = VideoLink.replace(\"watch?v=\", \"embed/\");\r\n\r\n    //------------------------------------------------------------//\r\n\r\n    const promises = images.map(async (image) => {\r\n      // Creates a low res version of each image\r\n      const resizedImage = await resizeFile(image);\r\n      console.log(resizedImage);\r\n      const filename = image.name;\r\n      const key = \"\" + teamID + \"/\" + \"lowres\" + \"/\" + filename;\r\n      const params = {\r\n        Bucket: bucketName,\r\n        Key: key,\r\n        ACL: \"public-read\",\r\n        Body: resizedImage,\r\n        ContentType: \"image/*\",\r\n      };\r\n      console.log(params);\r\n      try {\r\n        const data = await s3.upload(params).promise();\r\n        return data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    });\r\n\r\n    try {\r\n      const results = Promise.all(promises);\r\n      console.log(results);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    const highResPromises = images.map(async (image) => {\r\n      const filename = image.name;\r\n      const key = \"\" + teamID + \"/\" + filename;\r\n      const params = {\r\n        Bucket: bucketName,\r\n        Key: key,\r\n        ACL: \"public-read\",\r\n        Body: image,\r\n        ContentType: \"image/*\",\r\n      };\r\n\r\n      try {\r\n        const data = await s3.upload(params).promise();\r\n        return data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    });\r\n\r\n    try {\r\n      const results = Promise.all(highResPromises);\r\n      console.log(results);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    const pdfPromoise = pdf.map(async (pdf) => {\r\n      const filename = pdf.name;\r\n      const key = \"\" + teamID + \"/projectPoster/\" + filename;\r\n      const params = {\r\n        Bucket: bucketName,\r\n        Key: key,\r\n        ACL: \"public-read\",\r\n        Body: pdf,\r\n        ContentType: \"application/pdf\",\r\n      };\r\n\r\n      try {\r\n        const data = await s3.upload(params).promise();\r\n        return data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    });\r\n\r\n    try {\r\n      const results = Promise.all(pdfPromoise);\r\n      console.log(results);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    fetch(\"/project/FormAddProject\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        ProjectName: \"'\" + projectName + \"'\",\r\n        IsApproved: 0,\r\n        projectDec: \"'\" + Project_About + \"'\",\r\n        githubLink: \"'\" + githubLink + \"'\",\r\n        capstoneYear: \"'\" + yearString + \"'\",\r\n        capstoneSemester: semesterString,\r\n        adminID_FK: 7,\r\n        TeamName: \"'\" + TeamName + \"'\",\r\n        VideoLink: \"'\" + newLink + \"'\",\r\n        ProjectIntro: \"'\" + ProjectIntro + \"'\",\r\n        Project_Approach: \"'\" + Project_Approach + \"'\",\r\n        Technologies: arrayTech,\r\n        Users: users,\r\n        TeamLeader: user,\r\n        TeamId: \"'\" + teamID + \"'\",\r\n      }),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        id=\"studentprojectSubmit\"\r\n        className=\"projectsubmitform\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <CRow\r\n          xs={{ cols: 1, gutter: 4 }}\r\n          sm={{ cols: 1 }}\r\n          md={{ cols: 1 }}\r\n          lg={{ cols: 2 }}\r\n          xl={{ cols: 2 }}\r\n          xxl={{ cols: 2 }}\r\n        >\r\n          <CCol xs>\r\n            <MDBInput required id=\"company\" label=\"Team Name\" />\r\n          </CCol>\r\n          <CCol>\r\n            <MDBInput required id=\"projectName\" label=\"Project Title\" />\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow\r\n          xs={{ cols: 1, gutter: 4 }}\r\n          sm={{ cols: 1 }}\r\n          md={{ cols: 1 }}\r\n          lg={{ cols: 2 }}\r\n          xl={{ cols: 2 }}\r\n          xxl={{ cols: 2 }}\r\n        >\r\n          <CCol xs>\r\n            <Select\r\n              required\r\n              id=\"year\"\r\n              className=\"basic-single\"\r\n              classNamePrefix=\"select\"\r\n              isClearable\r\n              isSearchable\r\n              name=\"year\"\r\n              options={years}\r\n              components={animatedComponents}\r\n              placeholder=\"Select year project was completed\"\r\n              onChange={handleChangeYears}\r\n            />\r\n          </CCol>\r\n          <CCol>\r\n            <Select\r\n              id=\"semester\"\r\n              required\r\n              className=\"basic-single\"\r\n              classNamePrefix=\"select\"\r\n              isClearable\r\n              isSearchable\r\n              components={animatedComponents}\r\n              name=\"year\"\r\n              options={semester}\r\n              placeholder=\"Select semester project was completed\"\r\n              onChange={handleChangeSemesters}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <MDBTextArea\r\n          label=\"Project introduction\"\r\n          required\r\n          id=\"intro\"\r\n          className=\"textAreaExample\"\r\n          rows={2}\r\n          onInput={handleText1Input}\r\n          value={text1}\r\n        />\r\n        <div className={counterClassName(text1)}>\r\n          <p>{text1.length}/5000</p>\r\n        </div>\r\n\r\n        <MDBTextArea\r\n          label=\"Tell us about your project\"\r\n          required\r\n          id=\"about\"\r\n          className=\"textAreaExample\"\r\n          rows={4}\r\n          onInput={handleText2Input}\r\n          value={text2}\r\n        />\r\n        <div className={counterClassName(text2)}>\r\n          <p>{text2.length}/5000</p>\r\n        </div>\r\n\r\n        <MDBTextArea\r\n          label=\"Tell us about your project approach\"\r\n          required\r\n          id=\"approach\"\r\n          className=\"textAreaExample\"\r\n          rows={4}\r\n          onInput={handleText3Input}\r\n          value={text3}\r\n        />\r\n        <div className={counterClassName(text3)}>\r\n          <p>{text3.length}/5000</p>\r\n        </div>\r\n\r\n        <CreatableSelect\r\n          required\r\n          className=\"formLinks\"\r\n          id=\"tech\"\r\n          isMulti\r\n          components={animatedComponents}\r\n          options={techOptions}\r\n          maxMenuHeight={250}\r\n          onChange={handleChangeTechnologies}\r\n          placeholder=\"Select from the drop down or type the technologies you used in the project\"\r\n        />\r\n\r\n        {users.map((user, index) => (\r\n          <div key={index}>\r\n            <CRow\r\n              xs={{ cols: 1, gutter: 1 }}\r\n              sm={{ cols: 1 }}\r\n              md={{ cols: 4 }}\r\n              lg={{ cols: 4 }}\r\n              xl={{ cols: 4 }}\r\n              xxl={{ cols: 4 }}\r\n            >\r\n              <CCol>\r\n                <MDBInput\r\n                  label=\"UPI\"\r\n                  required\r\n                  value={user.upi}\r\n                  onChange={(e) =>\r\n                    handleUserChange(index, \"upi\", e.target.value)\r\n                  }\r\n                />\r\n              </CCol>\r\n              <CCol>\r\n                <MDBInput\r\n                  required\r\n                  label=\"First Name\"\r\n                  value={user.firstName}\r\n                  onChange={(e) =>\r\n                    handleUserChange(index, \"firstName\", e.target.value)\r\n                  }\r\n                />\r\n              </CCol>\r\n              <CCol>\r\n                <MDBInput\r\n                  required\r\n                  label=\"Last Name\"\r\n                  value={user.lastName}\r\n                  onChange={(e) =>\r\n                    handleUserChange(index, \"lastName\", e.target.value)\r\n                  }\r\n                />\r\n              </CCol>\r\n              <CCol>\r\n                <MDBBtn\r\n                  className=\"me-1\"\r\n                  color=\"secondary\"\r\n                  block\r\n                  onClick={() => handleRemoveUser(index)}\r\n                >\r\n                  Remove User\r\n                </MDBBtn>\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        ))}\r\n\r\n        <MDBBtn className=\"mb-4\" onClick={handleAddUser}>\r\n          Add team member!\r\n        </MDBBtn>\r\n\r\n        <MDBInput\r\n          className=\"formLinks\"\r\n          label=\"Github Link\"\r\n          required\r\n          id=\"github\"\r\n          type=\"url\"\r\n        />\r\n        <MDBInput\r\n          className=\"formLinks\"\r\n          label=\"Youtube demo link\"\r\n          id=\"yt\"\r\n          type=\"url\"\r\n        />\r\n        <div className=\"fileUploadOptions\">\r\n          <label for=\"pdf-upload\">\r\n            Upload your project poster\r\n          </label>\r\n          <input\r\n            className=\"formLinks\"\r\n            type=\"file\"\r\n            id=\"pdf-upload\"\r\n            name=\"pdf-upload\"\r\n            accept=\"application/pdf\"\r\n            onChange={handlePDFUpload}\r\n          />\r\n          <label for=\"image-upload\">\r\n            Upload pictures of your project\r\n          </label>\r\n\r\n          <input\r\n            className=\"formLinks\"\r\n            type=\"file\"\r\n            id=\"image-upload\"\r\n            name=\"image-upload\"\r\n            onChange={handleImageChange}\r\n            multiple\r\n            accept=\"image/*\"\r\n          />\r\n        </div>\r\n        <div className={thumbnailClassName(images.length)}>\r\n          {images.map((url, index) => (\r\n            <div key={index} className=\"displayImage\">\r\n              <img\r\n                title=\"Click to delete\"\r\n                className=\"thumbnail\"\r\n                onClick={() => handleRemoveImage(index)}\r\n                src={URL.createObjectURL(url)}\r\n                alt={`Thumbnail ${index}`}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <MDBBtn className=\"mb-4\" type=\"submit\" block>\r\n          Submit Project!\r\n        </MDBBtn>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\Navbar.js",["177"],[],"import { Link, useMatch, useResolvedPath } from \"react-router-dom\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie';\r\nimport { Drawer, IconButton, List, ListItem, ListItemText } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nexport default function Navbar() {\r\n    const { user, setUser } = useContext(AuthContext);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    \r\n\r\n    useEffect(() => {\r\n        setIsAuthenticated(user !== null);\r\n    }, [user]);\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3000/auth/logout\");\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                Cookies.remove('connect.sid', { path: '/' });\r\n                console.log(Cookies.get('connect.sid'))\r\n                setUser(null);\r\n                setIsAuthenticated(false);\r\n                navigate(\"/\");\r\n            } else {\r\n                console.error(\"Error logging out:\", response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error logging out:\", error.message);\r\n        }\r\n    };\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!menuOpen);\r\n      };\r\n    return (\r\n        <nav className=\"navtop\">\r\n            <Link to=\"/\" className=\"site-title\">\r\n                <div className=\"logo\">\r\n                    <img\r\n                        src={require(\"./images/capfoliov2.png\")}\r\n                        alt=\"Logo\"\r\n                    />\r\n                </div>\r\n            </Link>\r\n            <ul className=\"nav-desktop\">\r\n                {!isAuthenticated ? (\r\n                    <>\r\n                        <CustomLink to=\"/login\" className=\"login\">\r\n                            Log in\r\n                        </CustomLink>\r\n                        <CustomLink to=\"/sign-up\" className=\"signup\">\r\n                            Sign up\r\n                        </CustomLink>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <CustomLink to=\"/profile\" className=\"login\">\r\n                            Profile\r\n                        </CustomLink>\r\n                        <CustomLink to=\"/\"className=\"signup\" onClick={handleLogout}>\r\n                            Logout\r\n                        </CustomLink>\r\n                    </>\r\n                )}\r\n            </ul>\r\n            <div className=\"nav-mobile\">\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={toggleMenu} sx={{ bgcolor: '#72a0e9', margin: \"40px 0px 0px -12px\", }}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Drawer\r\n                anchor=\"left\"\r\n                open={menuOpen}\r\n                onClose={toggleMenu}\r\n                sx={{\r\n                    '& .MuiDrawer-paper': {\r\n                        width: '200px',\r\n                        '@media (min-width: 500px)': {\r\n                            width: '400px',\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                    <List>\r\n                        {!isAuthenticated ? (\r\n                            <>\r\n                                <ListItem button component={Link} to=\"/login\" onClick={toggleMenu}>\r\n                                    <ListItemText primary=\"Log in\" />\r\n                                </ListItem>\r\n                                <ListItem button component={Link} to=\"/sign-up\" onClick={toggleMenu}>\r\n                                    <ListItemText primary=\"Sign up\" />\r\n                                </ListItem>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <ListItem button component={Link} to=\"/profile\" onClick={toggleMenu}>\r\n                                    <ListItemText primary=\"Profile\" />\r\n                                </ListItem>\r\n                                <ListItem button component={Link} to=\"/\" onClick={handleLogout}>\r\n                                    <ListItemText primary=\"Logout\" />\r\n                                </ListItem>\r\n                            </>\r\n                        )}\r\n                    </List>\r\n                </Drawer>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nfunction CustomLink({ to, children, ...props }) {\r\n    const resolvedPath = useResolvedPath(to);\r\n    const isActive = useMatch({ path: resolvedPath.pathname, end: true });\r\n\r\n    return (\r\n        <li className={isActive ? \"active\" : \"\"}>\r\n            <Link to={to} {...props}>\r\n                {children}\r\n            </Link>\r\n        </li>\r\n    );\r\n}","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\Home.js",[],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\Login.js",["178"],[],"import React, { useState } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../AuthContext';\r\nimport './pages.css';\r\nimport GoogleLogin from '../images/btn_google_signin_dark_pressed_web@2x.png';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    switch (id) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch('http://localhost:3000/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      // Fetch the user data from the server\r\n      const userResponse = await fetch('http://localhost:3000/auth/user');\r\n      const userData = await userResponse.json();\r\n\r\n      // Update the context with the user data\r\n      setUser(userData);\r\n\r\n      // Redirect to the home page\r\n      window.location.href = '/';\r\n    } else {\r\n      alert('Failed to log in');\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div className=\"container\">\r\n        <div className=\"auth-wrapper\">\r\n          <div className=\"auth-inner\">\r\n            <form className=\"cent\" onSubmit={handleSubmit}>\r\n              <h3>Log in</h3>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                />\r\n              </div>\r\n              <div className=\"d-grid\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Log in\r\n                </button>\r\n              </div>\r\n              <p className=\"forgot-password text-right\">\r\n                Forgot <Link to=\"/Rest-Password\">password?</Link>\r\n              </p>\r\n              <p className=\"register text-center\">\r\n                Don't have an account? <Link to=\"/sign-up\">Sign Up</Link>\r\n              </p>\r\n              <div>\r\n                <a id=\"loginButton\" href=\"http://localhost:3000/auth/google\">\r\n                <img className='resize-google-button' src={GoogleLogin}/>\r\n                </a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\SignUp.js",["179"],[],"import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport GoogleLogin from '../images/btn_google_signin_dark_pressed_web@2x.png';\r\nconst SignUp = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    switch (id) {\r\n      case 'firstName':\r\n        setFirstName(value);\r\n        break;\r\n      case 'lastName':\r\n        setLastName(value);\r\n        break;\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      case 'confirmPassword':\r\n        setConfirmPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    const response = await fetch('http://localhost:3000/auth/signup', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ firstName, lastName, email, password })\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      window.location.href = '/login';\r\n    } else {\r\n      alert('Failed to sign up');\r\n    }\r\n  }\r\n\r\n  return (\r\n    \r\n      <div className=\"container\">\r\n        <div className=\"auth-wrapper\">\r\n          <div className=\"auth-inner\">\r\n            <form className=\"cent\" onSubmit={handleSubmit}>\r\n              <h3>Sign Up</h3>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"firstName\"\r\n                    placeholder=\"First Name\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={lastName}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"lastName\"\r\n                    placeholder=\"Last Name\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"confirmPassword\"\r\n                    placeholder=\"Confirm password\"\r\n                />\r\n              </div>\r\n              <div className=\"d-grid\">\r\n              <Link to=\"/Code-Confirmation\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Sign Up\r\n                </button></Link>\r\n              </div>\r\n              <p className=\"forgot-password text-right\">\r\n                Already registered <Link to=\"/login\">Sign In?</Link>\r\n              </p>\r\n              <div>\r\n                <a id=\"loginButton\" href=\"http://localhost:3000/auth/google\"> \r\n                <img className='resize-google-button' src={GoogleLogin}/>\r\n                </a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n  );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\ResetPassword.js",[],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\CodeConfirmation.js",[],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\pages\\Profile.js",["180","181"],[],"import {\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardImage,\r\n  MDBCardText,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBRow,\r\n} from \"mdb-react-ui-kit\";\r\nimport React from \"react\";\r\nimport ProjectIntro from \"../components/ProjectIntro\";\r\nimport { ReactComponent as Heart } from \"../images/heart.svg\";\r\nimport { ReactComponent as Views } from \"../images/views.svg\";\r\nimport AwardBanner from \"../components/awardBanner.js\";\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CListGroup,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainImage from \"../components/getMainImage\";\r\nimport \"./Profile.css\";\r\n\r\nconst Profile = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [profession, setProfession] = useState(\"\");\r\n  const [github, setGithub] = useState(\"https://github.com\");\r\n  const [linkedin, setLinkedin] = useState(\"https://linkedin.com\");\r\n  const [description, setDescription] = useState(\r\n    \"I am a CompSci student at the University of Auckland and I have taken COMPSCI399 in 2023 Semester 1.\"\r\n  );\r\n  const [picture, setPicture] = useState(\"\");\r\n  const [projects, setProjects] = useState([]);\r\n  const [userProject, setUserProject] = useState([]);\r\n  const [isStudent, setStudent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      let userData;\r\n      try {\r\n        const response = await fetch(\"http://localhost:3000/auth/user\");\r\n        if (!response.ok) {\r\n          throw new Error(\"User not authenticated\");\r\n        }\r\n        userData = await response.json();\r\n        setName(`${userData.FirstName} ${userData.LastName}`);\r\n        setPicture(userData.Photo);\r\n        setProfession(userData.Type);\r\n        setDescription(userData.userDescription);\r\n        if (userData.UserType === 1) {\r\n          setStudent(true);\r\n        }\r\n\r\n        console.log(userData.UserID);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error.message);\r\n      }\r\n\r\n      try {\r\n        const projectResponse = await fetch(\r\n          \"http://localhost:3000/profile/likedProjects?id=\" + userData.UserID\r\n        );\r\n        if (!projectResponse.ok) {\r\n          throw new Error(\"Error getting project data\");\r\n        }\r\n\r\n        const projectData = await projectResponse.json();\r\n        setProjects(projectData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching project data:\", error.message);\r\n      }\r\n\r\n      try {\r\n        const userProjectResponse = await fetch(\r\n          \"http://localhost:3000/profile/userproject?id=\" + userData.UserID\r\n        );\r\n        if (!userProjectResponse.ok) {\r\n          throw new Error(\"Error getting project data\");\r\n        }\r\n\r\n        const userProjectData = await userProjectResponse.json();\r\n        setUserProject(userProjectData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching project data:\", error.message);\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handleEditProfile = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSaveProfile = () => {\r\n    console.log({\r\n      name: name,\r\n      profession: profession,\r\n      github: github,\r\n      linkedin: linkedin,\r\n      description: description,\r\n      picture: picture,\r\n    });\r\n\r\n    const [firstName, lastName] = name.split(\" \");\r\n\r\n    fetch(\"/profile/updateUser\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        linkedin: linkedin,\r\n        github: github,\r\n        userDesc: description,\r\n        profession: profession,\r\n      }),\r\n    });\r\n\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleProfessionChange = (e) => {\r\n    setProfession(e.target.value);\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <section style={{ backgroundColor: \"#eee\" }}>\r\n      <MDBContainer className=\"py-5\">\r\n        <MDBRow>\r\n          <MDBCol lg=\"4\">\r\n            <MDBCard className=\"mb-4\">\r\n              <MDBCardBody className=\"text-center\">\r\n                <MDBCardImage\r\n                  src={picture}\r\n                  alt=\"avatar\"\r\n                  className=\"rounded-circle\"\r\n                  style={{ width: \"150px\" }}\r\n                  fluid\r\n                />\r\n                {isEditing ? (\r\n                  <div>\r\n                    <input value={name} onChange={handleNameChange} placeholder=\"Name\" />\r\n                    <input\r\n                      value={profession}\r\n                      onChange={handleProfessionChange}\r\n                      placeholder='Occupation'\r\n                    />\r\n                    <textarea\r\n                      value={description}\r\n                      onChange={handleDescriptionChange}\r\n                      placeholder=\"Tell us about yourself\"\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <h5 className=\"my-3\">{name}</h5>\r\n                    <p className=\"text-muted mb-1\">{profession}</p>\r\n                    <p className=\"text-muted mb-1\">{description}</p>\r\n                  </div>\r\n                )}\r\n                <div className=\"d-flex justify-content-center mb-2\">\r\n                  {isStudent ? (\r\n                    <div>\r\n                      {isEditing ? (\r\n                        <MDBBtn onClick={handleSaveProfile}>\r\n                          Save Profile\r\n                        </MDBBtn>\r\n                      ) : (\r\n                        <MDBBtn onClick={handleEditProfile}>\r\n                          Edit Profile\r\n                        </MDBBtn>\r\n                      )}\r\n                      <Link to=\"/project-submit\">\r\n                        <MDBBtn outline className=\"ms-1\">\r\n                          Submit Project\r\n                        </MDBBtn>\r\n                      </Link>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                    {isEditing ? (\r\n                      <MDBBtn onClick={handleSaveProfile}>\r\n                        Save Profile\r\n                      </MDBBtn>\r\n                    ) : (\r\n                      <MDBBtn onClick={handleEditProfile}>\r\n                        Edit Profile\r\n                      </MDBBtn>\r\n                    )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n\r\n            <MDBCard className=\"mb-4 mb-lg-0\">\r\n              <MDBCardBody className=\"p-0\">\r\n                <MDBListGroup flush className=\"rounded-3\">\r\n                  <a href={github}>\r\n                    <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-3\">\r\n                      <MDBIcon\r\n                        fab\r\n                        icon=\"github fa-lg\"\r\n                        style={{ color: \"#333333\" }}\r\n                      />\r\n                      <MDBCardText>GitHub</MDBCardText>\r\n                    </MDBListGroupItem>\r\n                  </a>\r\n                  <a href={linkedin}>\r\n                    <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-3\">\r\n                      <MDBIcon\r\n                        fab\r\n                        icon=\"linkedin fa-lg\"\r\n                        style={{ color: \"#55acee\" }}\r\n                      />\r\n                      <MDBCardText>LinkedIn</MDBCardText>\r\n                    </MDBListGroupItem>\r\n                  </a>\r\n                </MDBListGroup>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n          <MDBCol lg=\"8\">\r\n            <h1 className=\"myProject\">My Project</h1>\r\n            <MDBCard className=\"mb-4\">\r\n              {userProject.map((project) => (\r\n                <CCol xs>\r\n                  <Link to={`/project-view/${project.ProjectID}`}>\r\n                    <CCard className=\"project-card h-100\">\r\n                      <AwardBanner\r\n                        key={project.TeamName}\r\n                        text={project.AwardName}\r\n                      />\r\n                      <MainImage\r\n                        key={project.ProjectID}\r\n                        TeamId={project.TeamId}\r\n                      />\r\n                      <CCardBody>\r\n                        <CCardTitle>{project.ProjectName}</CCardTitle>\r\n                        <CCardText>{project.TeamName}</CCardText>\r\n                        <CListGroup flush>\r\n                          <ProjectIntro projectIntro={project.ProjectIntro} />\r\n                        </CListGroup>\r\n                      </CCardBody>\r\n\r\n                      <CCardFooter>\r\n                        <p className=\"semesterTag semtag\">\r\n                          {project.capstoneYear} Semester{\" \"}\r\n                          {project.capstoneSemester}\r\n                        </p>\r\n\r\n                        <div className=\"project-stats\">\r\n                          <p>\r\n                            {\" \"}\r\n                            <Heart /> {project.likes}{\" \"}\r\n                          </p>\r\n                          <p>\r\n                            {\" \"}\r\n                            <Views /> {project.viewCount}{\" \"}\r\n                          </p>\r\n                        </div>\r\n                      </CCardFooter>\r\n                    </CCard>\r\n                  </Link>\r\n                </CCol>\r\n              ))}\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <div className=\"project-list-liked-projects\">\r\n          <h1 className=\"myProject\">My liked projects</h1>\r\n\r\n          <CRow\r\n            xs={{ cols: 1, gutter: 4 }}\r\n            sm={{ cols: 2 }}\r\n            md={{ cols: 3 }}\r\n            lg={{ cols: 4 }}\r\n            xl={{ cols: 4 }}\r\n            xxl={{ cols: 4 }}\r\n          >\r\n            {projects.map((project) => (\r\n              <CCol xs>\r\n                <Link to={`/project-view/${project.ProjectID}`}>\r\n                  <CCard className=\"project-card h-100\">\r\n                    <AwardBanner\r\n                      key={project.TeamName}\r\n                      text={project.AwardName}\r\n                    />\r\n                    <MainImage\r\n                      key={project.ProjectID}\r\n                      TeamId={project.TeamId}\r\n                    />\r\n                    <CCardBody>\r\n                      <CCardTitle>{project.ProjectName}</CCardTitle>\r\n                      <CCardText>{project.TeamName}</CCardText>\r\n                      <CListGroup flush>\r\n                        <ProjectIntro projectIntro={project.ProjectIntro} />\r\n                      </CListGroup>\r\n                    </CCardBody>\r\n\r\n                    <CCardFooter>\r\n                      <p className=\"semesterTag\">\r\n                        {project.capstoneYear} Semester{\" \"}\r\n                        {project.capstoneSemester}\r\n                      </p>\r\n\r\n                      <div className=\"project-stats\">\r\n                        <p>\r\n                          {\" \"}\r\n                          <Heart /> {project.likes}{\" \"}\r\n                        </p>\r\n                        <p>\r\n                          {\" \"}\r\n                          <Views /> {project.viewCount}{\" \"}\r\n                        </p>\r\n                      </div>\r\n                    </CCardFooter>\r\n                  </CCard>\r\n                </Link>\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </div>\r\n      </MDBContainer>\r\n    </section>\r\n  );\r\n};\r\nexport default Profile;\r\n","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\likeButton.js",["182","183","184","185","186","187","188","189","190","191"],[],"import React, { useState, useEffect } from \"react\";\r\nimport cn from \"classnames\";\r\nimport { ReactComponent as Hand } from \"../images/hand.svg\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport \"./likeStyles.css\";\r\n\r\nconst particleList = Array.from(Array(10));\r\n\r\nconst LikeButton2 = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [liked, setLiked] = useState(null);\r\n  const [clicked, setClicked] = useState(null);\r\n  const [likes, setLikes] = useState(\"\");\r\n\r\n  const getLikes = async () => {\r\n    const response = await fetch(\"/projects/like?id=\" + props.likenumber).then(\r\n      (response) => response.json()\r\n    );\r\n    setLikes(response);\r\n  };\r\n\r\n  const initialLikes = async () => {\r\n    const response = await fetch(\r\n      \"/projects/ProjectsLiked?id=\" + props.likenumber\r\n    ).then((response) => response.json());\r\n    if (response[response.length - 1].hasLiked == \"0\") {\r\n      setLiked(false);\r\n      setClicked(false);\r\n    }\r\n\r\n    if (response[response.length - 1].hasLiked == \"1\") {\r\n      setLiked(true);\r\n      setClicked(true);\r\n    }\r\n  };\r\n\r\n  const checkLikes = async () => {\r\n    fetch(\"/projects/ProjectsLiked?id=\" + props.likenumber)\r\n      .then((response) => {\r\n        if (response.status === 404) {\r\n          return response.text().then((errorBody) => {\r\n            console.log(errorBody);\r\n          });\r\n        } else {\r\n          return response.json().then((responseData) => {\r\n            if (\r\n              responseData.length > 0 &&\r\n              responseData[responseData.length - 1].hasLiked == \"0\"\r\n            ) {\r\n              fetch(\"/projects/postLike\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                  projectId: props.likenumber,\r\n                }),\r\n              }).then((response) => {\r\n                return response.text().then((responseBody) => {\r\n                  if (responseBody == '\"Only logged in users can like\"') {\r\n                    navigate(\"/login\");\r\n                  } else {\r\n                    setLiked(true);\r\n                    setClicked(true);\r\n                    getLikes();\r\n\r\n                  }\r\n                });\r\n              });\r\n            } else if (\r\n              responseData.length > 0 &&\r\n              responseData[responseData.length - 1].hasLiked == \"1\"\r\n            ) {\r\n              removeLike();\r\n              setLiked(false);\r\n              setClicked(false);\r\n            }\r\n          });\r\n        }\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const removeLike = async () => {\r\n    await fetch(\"/projects/postDisLike\", {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        projectId: props.likenumber,\r\n      }),\r\n    });\r\n    getLikes();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLikes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initialLikes();\r\n  }, []);\r\n\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        checkLikes();\r\n      }}\r\n      onAnimationEnd={() => setClicked(false)}\r\n      className={cn(\"like-button-wrapper\", {\r\n        liked,\r\n        clicked,\r\n      })}\r\n    >\r\n      {liked && (\r\n        <div className=\"particles\">\r\n          {particleList.map((_, index) => (\r\n            <div\r\n              className=\"particle-rotate\"\r\n              style={{\r\n                transform: `rotate(${\r\n                  (360 / particleList.length) * index + 1\r\n                }deg)`,\r\n              }}\r\n            >\r\n              <div className=\"particle-tick\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className=\"like-button\">\r\n        <Hand />\r\n        <span>Like</span>\r\n        <span className={cn(\"suffix\", { liked })}>d &nbsp;</span>\r\n        <span id=\"projectlike\" className=\"likes-counter\">\r\n          {\" \"}\r\n          {/* | {likes && likes.map((like) => like.No_of_likes)} */}\r\n        </span>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LikeButton2;\r\n","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\ProjectGallery.js",["192","193","194","195","196","197","198","199","200","201","202","203"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './ProjectGallery.css';\r\nimport { Link, useMatch, useResolvedPat, useContext } from \"react-router-dom\";\r\nimport { Collapse, CButton, CCollapse, CListGroup, CListGroupItem, CCard, CCardBody, CRow, CCol, CCardImage, CCardTitle, CCardText, CCardFooter } from '@coreui/react';\r\nimport LikeButton from \"./components/likeButton\";\r\nimport AwardBanner from \"./components/awardBanner.js\";\r\nimport Sidebar from './Sidebar';\r\nimport CSidebar from './components/CSidebar';\r\nimport MainImage from './components/getMainImage';\r\nimport { ReactComponent as Heart } from \"./images/heart.svg\";\r\nimport { ReactComponent as Views } from \"./images/views.svg\";\r\nimport ProjectIntro from './components/ProjectIntro'; \r\nimport { Pagination } from '@mui/material';\r\nimport Search from './Search';\r\n\r\nconst ProjectGallery = () => {\r\n    const [projects, setProjects] = useState([]);\r\n    const [filteredProjects, setFilteredProjects] = useState([]);\r\n    const [isFiltered, setIsFiltered] = useState(false);\r\n    const [isNoResults, setIsNoResults] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const handleChangePage = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const projectsPerPage = 6;\r\n    const startIndex = (page - 1) * projectsPerPage;\r\n    const endIndex = startIndex + projectsPerPage;\r\n    const displayedProjects = (isFiltered ? filteredProjects : projects).slice(startIndex, endIndex);\r\n\r\n\r\n    const fetchAllProjects = async () => {\r\n        const response = await fetch(\"/project/AllProjectData\").then((response) => response.json());\r\n        setProjects(response);\r\n        setIsFiltered(false);\r\n        setIsNoResults(false);\r\n\r\n    };\r\n   //Checks to see if it should render all projects or just filtered ones - used for when no options are selected\r\n    useEffect(() => {\r\n        if (!isFiltered) {\r\n            setFilteredProjects([]);\r\n        }\r\n    }, [isFiltered]);\r\n\r\n    useEffect(() => {\r\n        fetchAllProjects();\r\n    }, []);\r\n\r\n    const fetchFilteredProjects = async (body) => {\r\n        const response = await fetch(\"/project/FilteredProjectData\", {\r\n            method: 'POST',\r\n            headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n            body: body\r\n        }).then((response) => response.json());\r\n\r\n        if (response.length === 0) {\r\n            //If nothing is return see noresults to true\r\n            setIsNoResults(true);\r\n        } else {\r\n            setFilteredProjects(response);\r\n            setIsFiltered(true);\r\n            setIsNoResults(false);\r\n        }\r\n    };\r\n\r\n\r\n    const fetchSearchedProject = async (body) => {\r\n        console.log(body)\r\n        const response = await fetch('project/searchProject?keyword=' + body).then((response) => response.json());\r\n        if (response.length === 0) {\r\n            //If nothing is return see noresults to true\r\n            setIsNoResults(true);\r\n        } else {\r\n            setFilteredProjects(response);\r\n            setIsFiltered(true);\r\n            setIsNoResults(false);\r\n        }\r\n    }\r\n\r\n    const handleApplyFilter = (body) => {\r\n        fetchFilteredProjects(body);\r\n    };\r\n\r\n    const handleApplySearch = body => {\r\n        fetchSearchedProject(body)\r\n    }\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"project-gallery\">\r\n            <Search onApplySearch={handleApplySearch} />\r\n            \r\n\r\n            {/*checks to see if the filter returned anything - if it does not it will show the message other genreate the cards like normal*/}\r\n            {isNoResults && (\r\n                <div className=\"no-results-message\">\r\n                    <Sidebar onApplyFilter={handleApplyFilter} />\r\n                    <h2>No results found.</h2>\r\n                </div>\r\n            )}\r\n\r\n            {!isNoResults && (\r\n              <div className='gallery-wrapper'>\r\n                <div className='filter'>\r\n                    <Sidebar onApplyFilter={handleApplyFilter} />\r\n                </div>\r\n                <div className='cfilter'>\r\n                    <CSidebar onApplyFilter={handleApplyFilter} />\r\n                </div>\r\n                <div className=\"project-list\">\r\n                    <CRow xs={{ cols: 1, gutter: 4 }} sm={{ cols: 2 }} md={{ cols: 2 }} lg={{ cols: 2 }} xl={{ cols: 3 }} xxl={{ cols: 3 }}>\r\n                      {displayedProjects.map((project) => (\r\n\r\n                            <CCol xs>\r\n                              <Link to={`/project-view/${project.ProjectID}`}>\r\n                                <CCard className=\"project-card h-100\">\r\n                                    <AwardBanner key={project.TeamName} text={project.AwardName} />\r\n                                    <MainImage key={project.ProjectID} TeamId={project.TeamId} />\r\n                                    <CCardBody>\r\n                                        <CCardTitle>{project.ProjectName}</CCardTitle>\r\n                                        <CCardText>\r\n                                            {project.TeamName}\r\n                                        </CCardText>\r\n                                        <CListGroup flush>\r\n                                          <ProjectIntro projectIntro={project.ProjectIntro} />\r\n                                        </CListGroup>\r\n                                    </CCardBody>\r\n                                    {/* <CCardFooter>\r\n                                        <CCardText>\r\n                                            {'React | Next.js | Javascript | HTML'}\r\n                                        </CCardText>\r\n                                    </CCardFooter> */}\r\n                                    <CCardFooter>\r\n                                      <p className='semesterTag'>{project.capstoneYear} Semester {project.capstoneSemester}</p>\r\n                                        <div className='project-stats'>\r\n                                        <p> <Heart/> {project.likes} </p> \r\n                                        <p> <Views/> {project.viewCount} </p> \r\n                                        </div>\r\n                                    </CCardFooter>\r\n                                </CCard>\r\n                                </Link>\r\n                            </CCol>\r\n                        ))}\r\n                    </CRow>\r\n                    <div className='pagination-wrapper'>\r\n                      <Pagination\r\n                      count={Math.ceil((isFiltered ? filteredProjects.length : projects.length) / projectsPerPage)}\r\n                      page={page}\r\n                      onChange={handleChangePage}\r\n                      color=\"primary\"\r\n                      sx={{\r\n                        marginTop: '20px',\r\n                        marginLeft: '20%',\r\n                        '& .MuiPaginationItem-root': {\r\n                          backgroundColor: 'transparent',\r\n                          '&:hover': {\r\n                            backgroundColor: 'transparent',\r\n                          },\r\n                        },\r\n                        '& .MuiPaginationItem-page.Mui-selected': {\r\n                          backgroundColor: '#72a0e9',\r\n                          '&:hover': {\r\n                            backgroundColor: '#72a0e9',\r\n                          },\r\n                        },\r\n                        '& .MuiPaginationItem-page.Mui-selected.Mui-focusVisible': {\r\n                          backgroundColor: '#72a0e9',\r\n                        },\r\n                        \r\n                        '@media (max-width: 992px)': {\r\n                        marginLeft: 0,\r\n                        },\r\n                    }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectGallery;","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\ProjectIntro.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Collapse, CButton, CCollapse, CListGroup, CListGroupItem, CCard, CCardBody, CRow, CCol, CCardImage, CCardTitle, CCardText, CCardFooter } from '@coreui/react';\r\nimport '../ProjectGallery.css';\r\n\r\nfunction ProjectIntro({ projectIntro }) {\r\n  const [applyFade, setApplyFade] = useState(false);\r\n  const textRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const checkTextHeight = () => {\r\n      if (textRef.current) {\r\n        const textHeight = textRef.current.offsetHeight;\r\n        setApplyFade(textHeight > 100);\r\n      }\r\n    };\r\n\r\n    checkTextHeight();\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      checkTextHeight();\r\n    });\r\n\r\n    if (textRef.current) {\r\n      resizeObserver.observe(textRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (textRef.current) {\r\n        resizeObserver.unobserve(textRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className='text-container'>\r\n      <div className='fade-text custom-list-group-item' ref={textRef}>{projectIntro}</div>\r\n      {applyFade && <div className=\"fade-effect\"></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectIntro;","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\ProjectTabs.js",["219"],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\getMainImage.js",["220"],[],"import { CCardImage } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Placeholder from \"../images/download.png\";\r\nimport ProgressiveImage from \"react-progressive-graceful-image\";\r\n\r\nconst MainImage = (props) => {\r\n  const [img, setImage] = useState();\r\n  const [lowRes, setLowRes] = useState();\r\n\r\n  useEffect(() => {\r\n    const getMainImage = async () => {\r\n      const files = await fetch(`/project/listTeamFiles/${props.TeamId}`);\r\n      const data = await files.json();\r\n\r\n      const filteredFiles = data.filter((file) => !file.endsWith(\"/\"));\r\n      console.log(\"The filtered files for \", props.TeamId, \" are: \", filteredFiles);\r\n      const url = \"https://capfoliostorage.s3.ap-southeast-2.amazonaws.com/\";\r\n\r\n      if (data.length === 0) {\r\n        setImage(Placeholder);\r\n      } else {\r\n        const firstElement = filteredFiles[0];\r\n        const lastSlashIndex = firstElement.lastIndexOf(\"/\");\r\n\r\n        const folder = firstElement.substring(0, lastSlashIndex);\r\n        const filename = firstElement.substring(lastSlashIndex);\r\n\r\n        const getLowRes = url + folder + filename;\r\n        setLowRes(getLowRes);\r\n\r\n        const getHighRes = url + filteredFiles[0];\r\n        setImage(getHighRes);\r\n      }\r\n    };\r\n\r\n    getMainImage();\r\n  }, []);\r\n\r\n  return (\r\n    <ProgressiveImage src={img} placeholder={lowRes}>\r\n      {(src) => <CCardImage id=\"imgcard\" orientation=\"top\" src={src} />}\r\n    </ProgressiveImage>\r\n  );\r\n};\r\n\r\nexport default MainImage;\r\n","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\awardBanner.js",[],[],"C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\Search.js",["221","222"],[],"import './Search.css';\r\nimport { React, useState, classes } from \"react\";\r\nimport \"./App.css\";\r\nimport SearchBar from './components/SearchBar';\r\n\r\n\r\nconst Search = ({ onApplySearch }) => {\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    onApplySearch(searchTerm)\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bg\">\r\n      <div className=\"illu\"></div>\r\n      {/* <div className=\"illu\"><img src={require('./images/home-imgv2.png')} alt=\"Logo\" draggable='false' /></div> */}\r\n      <div className='headline'>A home dedicated to showcasing <span className='bright'>bright</span> futures</div>\r\n      <div className=\"webzen-logo\"><p>Made by the team at WebZen</p></div>\r\n      {/* <img src={require('./images/webzen-logo-black.png')} alt=\"Logo\" /> */}\r\n\r\n      <div className=\"main\">\r\n        <div className=\"search\">\r\n          <SearchBar onSearch={handleSearch} />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\Sidebar.js",["223","224","225","226","227","228","229","230","231"],[],"import \"./Sidebar.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Collapse, CButton, CCollapse, CCard, CCardBody } from \"@coreui/react\";\r\nimport { all } from \"axios\";\r\n\r\nconst Sidebar = ({ onApplyFilter }) => {\r\n  const [technologies, setTechnologies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the technologies from the database and update state\r\n    fetch(\"/project/technologyNames\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTechnologies(data))\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const startYears = [\r\n    { value: \"2020\", label: \"2020\" },\r\n    { value: \"2021\", label: \"2021\" },\r\n    { value: \"2022\", label: \"2022\" },\r\n    { value: \"2023\", label: \"2023\" },\r\n  ];\r\n\r\n  const startSemester = [\r\n    { value: \"Semester One\", label: \"Semester One\" },\r\n    { value: \"Semester Two\", label: \"Semester Two\" },\r\n  ];\r\n\r\n  const techOptions = technologies.map((tech) => ({\r\n    value: tech,\r\n    label: tech,\r\n  }));\r\n\r\n  const awarded = [\r\n    { value: \"None\", label: \"None\" },\r\n    { value: \"Excellence Award\", label: \"Excellence Award\" },\r\n    { value: \"Community Award\", label: \"Community Award\" },\r\n    { value: \"Peoples Choice Award\", label: \"Peoples Choice Award\" },\r\n  ];\r\n\r\n  const sortBy = [\r\n    { value: \"Latest to oldest\", label: \"Latest to oldest\" },\r\n    { value: \"Oldest to latest\", label: \"Oldest to latest\" },\r\n    { value: \"Highest to lowest likes\", label: \"Highest to lowest likes\" },\r\n    { value: \"Lowest to highest Likes\", label: \"Lowest to highest likes\" },\r\n    { value: \"Highest to lowest views\", label: \"Highest to lowest views\" },\r\n    { value: \"Lowest to highest views\", label: \"Lowest to highest views\" },\r\n    { value: \"Alphabetical (A - Z)\", label: \"Alphabetical (A - Z)\" },\r\n    { value: \"Alphabetical (Z - A)\", label: \"Alphabetical (Z - A)\" },\r\n  ];\r\n\r\n  const [selectedYears, setSelectedYears] = useState([]);\r\n  const handleChangeYears = (selectedYears) => {\r\n    setSelectedYears(selectedYears);\r\n  };\r\n\r\n  const [selectedSemesters, setSelectedSemesters] = useState([]);\r\n  const handleChangeSemesters = (selectedSemesters) => {\r\n    setSelectedSemesters(selectedSemesters);\r\n  };\r\n\r\n  const [selectedTechnologies, setSelectedTechnologies] = useState([]);\r\n  const handleChangeTechnologies = (selectedTechnologies) => {\r\n    setSelectedTechnologies(selectedTechnologies);\r\n  };\r\n\r\n  const [selectedAwards, setSelectedAwards] = useState([]);\r\n  const handleChangeAwards = (selectedAwards) => {\r\n    setSelectedAwards(selectedAwards);\r\n  };\r\n\r\n  const [selectedSortBy, setSelectedSortBy] = useState([]);\r\n  const handleChangeSortBy = (selectedSortBy) => {\r\n    setSelectedSortBy(selectedSortBy);\r\n  };\r\n\r\n  const handleApplyFilter = () => {\r\n    //Create an array for each of the filter option and push each selected option into it\r\n    const yearArray = [];\r\n    const semesterArray = [];\r\n    const techArray = [];\r\n    const AwardsArray = [];\r\n    const selectArray = [];\r\n    selectedYears.forEach((e) => yearArray.push(e.label));\r\n    selectedSemesters.forEach((e) => semesterArray.push(e.label));\r\n    selectedTechnologies.forEach((e) => techArray.push(e.label));\r\n    selectedAwards.forEach((e) => AwardsArray.push(e.label));\r\n    selectArray.push(selectedSortBy.label);\r\n\r\n    //Changes Semester to an either 1 or 2\r\n    for (let i = 0; i < semesterArray.length; i++) {\r\n      if (semesterArray[i] == \"Semester One\") {\r\n        semesterArray[i] = 1;\r\n      } else {\r\n        semesterArray[i] = 2;\r\n      }\r\n    }\r\n\r\n    //Puts all the selected options into an object\r\n    const body = JSON.stringify({\r\n      capstoneYear: yearArray,\r\n      capstoneSemester: semesterArray,\r\n      technologyName: techArray,\r\n      AwardName: AwardsArray,\r\n      SortBy: selectArray,\r\n    });\r\n\r\n    // Call the FilteredProjectData function passed as a prop\r\n    if (typeof onApplyFilter === \"function\") {\r\n      onApplyFilter(body);\r\n    }\r\n  };\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  var handleChange = (selectedOption) => {\r\n    console.log(selectedOption);\r\n    setSelectedOption(selectedOption.value);\r\n  };\r\n\r\n  const [isClearable, setIsClearable] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"filter-btn\">\r\n          <CButton\r\n            href=\"#\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setVisible(!visible);\r\n            }}\r\n          >\r\n            Filter\r\n          </CButton>\r\n        </div>\r\n        {/* <CCollapse visible={visible}> */}\r\n        <CCard className=\"mt-3\">\r\n          <CCardBody>\r\n            <div class=\"filter-bg\">\r\n              <div className=\"bg-content-wrapper\">\r\n                <div className=\"filters\">\r\n                  <div className=\"row\">\r\n                    <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                      <p>Years</p>\r\n                      <Select\r\n                        placeholder={<div>Years...</div>}\r\n                        components={animatedComponents}\r\n                        isMulti\r\n                        onChange={handleChangeYears}\r\n                        options={startYears}\r\n                      />\r\n                    </div>\r\n                    <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                      <p>Semesters</p>\r\n                      <Select\r\n                        placeholder={<div>Semesters...</div>}\r\n                        components={animatedComponents}\r\n                        isMulti\r\n                        onChange={handleChangeSemesters}\r\n                        options={startSemester}\r\n                      />\r\n                    </div>\r\n                    <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                      <p>Technologies</p>\r\n                      <Select\r\n                        placeholder={<div>Made with...</div>}\r\n                        components={animatedComponents}\r\n                        isMulti\r\n                        onChange={handleChangeTechnologies}\r\n                        options={techOptions}\r\n                        maxMenuHeight={250}\r\n                      />\r\n                    </div>\r\n                    <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                      <p>Awards</p>\r\n                      <Select\r\n                        placeholder={<div>Awarded with...</div>}\r\n                        components={animatedComponents}\r\n                        isMulti\r\n                        onChange={handleChangeAwards}\r\n                        options={awarded}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"mt-3 me-0 w-50 col-xs-6\">\r\n                      <p>Sort by</p>\r\n                      <Select\r\n                        placeholder={<div>Oldest to latest</div>}\r\n                        className=\"basic-single\"\r\n                        classNamePrefix=\"select\"\r\n                        name=\"color\"\r\n                        onChange={handleChangeSortBy}\r\n                        options={sortBy}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"apply-filter-btn-wrapper\">\r\n                  <CButton\r\n                    className=\"apply-filter-btn\"\r\n                    onClick={handleApplyFilter}\r\n                  >\r\n                    Apply Filter\r\n                  </CButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </CCard>\r\n        {/* </CCollapse> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\CSidebar.js",["232","233","234","235","236","237","238","239"],[],"import \"../Sidebar.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Collapse, CButton, CCollapse, CCard, CCardBody } from \"@coreui/react\";\r\nimport { all } from \"axios\";\r\n\r\nconst CSidebar = ({ onApplyFilter }) => {\r\n  const [technologies, setTechnologies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the technologies from the database and update state\r\n    fetch(\"/project/technologyNames\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTechnologies(data))\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const startYears = [\r\n    { value: \"2020\", label: \"2020\" },\r\n    { value: \"2021\", label: \"2021\" },\r\n    { value: \"2022\", label: \"2022\" },\r\n    { value: \"2023\", label: \"2023\" },\r\n  ];\r\n\r\n  const startSemester = [\r\n    { value: \"Semester One\", label: \"Semester One\" },\r\n    { value: \"Semester Two\", label: \"Semester Two\" },\r\n  ];\r\n\r\n  const techOptions = technologies.map((tech) => ({\r\n    value: tech,\r\n    label: tech,\r\n  }));\r\n\r\n  const awarded = [\r\n    { value: \"None\", label: \"None\" },\r\n    { value: \"Excellence Award\", label: \"Excellence Award\" },\r\n    { value: \"Community Award\", label: \"Community Award\" },\r\n    { value: \"Peoples Choice Award\", label: \"Peoples Choice Award\" },\r\n  ];\r\n\r\n  const sortBy = [\r\n    { value: \"Latest to oldest\", label: \"Latest to oldest\" },\r\n    { value: \"Oldest to latest\", label: \"Oldest to latest\" },\r\n    { value: \"Highest to lowest likes\", label: \"Highest to lowest likes\" },\r\n    { value: \"Lowest to highest Likes\", label: \"Lowest to highest likes\" },\r\n    { value: \"Highest to lowest views\", label: \"Highest to lowest views\" },\r\n    { value: \"Lowest to highest views\", label: \"Lowest to highest views\" },\r\n    { value: \"Alphabetical (A - Z)\", label: \"Alphabetical (A - Z)\" },\r\n    { value: \"Alphabetical (Z - A)\", label: \"Alphabetical (Z - A)\" },\r\n  ];\r\n\r\n  const [selectedYears, setSelectedYears] = useState([]);\r\n  const handleChangeYears = (selectedYears) => {\r\n    setSelectedYears(selectedYears);\r\n  };\r\n\r\n  const [selectedSemesters, setSelectedSemesters] = useState([]);\r\n  const handleChangeSemesters = (selectedSemesters) => {\r\n    setSelectedSemesters(selectedSemesters);\r\n  };\r\n\r\n  const [selectedTechnologies, setSelectedTechnologies] = useState([]);\r\n  const handleChangeTechnologies = (selectedTechnologies) => {\r\n    setSelectedTechnologies(selectedTechnologies);\r\n  };\r\n\r\n  const [selectedAwards, setSelectedAwards] = useState([]);\r\n  const handleChangeAwards = (selectedAwards) => {\r\n    setSelectedAwards(selectedAwards);\r\n  };\r\n\r\n  const [selectedSortBy, setSelectedSortBy] = useState([]);\r\n  const handleChangeSortBy = (selectedSortBy) => {\r\n    setSelectedSortBy(selectedSortBy);\r\n  };\r\n\r\n  const handleApplyFilter = () => {\r\n    //Create an array for each of the filter option and push each selected option into it\r\n    const yearArray = [];\r\n    const semesterArray = [];\r\n    const techArray = [];\r\n    const AwardsArray = [];\r\n    const selectArray = [];\r\n    selectedYears.forEach((e) => yearArray.push(e.label));\r\n    selectedSemesters.forEach((e) => semesterArray.push(e.label));\r\n    selectedTechnologies.forEach((e) => techArray.push(e.label));\r\n    selectedAwards.forEach((e) => AwardsArray.push(e.label));\r\n    selectArray.push(selectedSortBy.label);\r\n\r\n    //Changes Semester to an either 1 or 2\r\n    for (let i = 0; i < semesterArray.length; i++) {\r\n      if (semesterArray[i] == \"Semester One\") {\r\n        semesterArray[i] = 1;\r\n      } else {\r\n        semesterArray[i] = 2;\r\n      }\r\n    }\r\n\r\n    //Puts all the selected options into an object\r\n    const body = JSON.stringify({\r\n      capstoneYear: yearArray,\r\n      capstoneSemester: semesterArray,\r\n      technologyName: techArray,\r\n      AwardName: AwardsArray,\r\n      SortBy: selectArray,\r\n    });\r\n\r\n    // Call the FilteredProjectData function passed as a prop\r\n    if (typeof onApplyFilter === \"function\") {\r\n      onApplyFilter(body);\r\n    }\r\n  };\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  var handleChange = (selectedOption) => {\r\n    console.log(selectedOption);\r\n    setSelectedOption(selectedOption.value);\r\n  };\r\n\r\n  const [isClearable, setIsClearable] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"filter-btn\">\r\n          <CButton\r\n            href=\"#\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              setVisible(!visible);\r\n            }}\r\n          >\r\n            Filter\r\n          </CButton>\r\n        </div>\r\n        <CCollapse visible={visible}>\r\n        <CCard className=\"mt-3\">\r\n          <CCardBody>\r\n            <div class=\"filter-bg\">\r\n              <div className=\"bg-content-wrapper\">\r\n                <div className=\"filters\">\r\n                  <div className=\"row\">\r\n                    <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                      <p>Years</p>\r\n                      <Select\r\n                        placeholder={<div>Years...</div>}\r\n                        components={animatedComponents}\r\n                        isMulti\r\n                        onChange={handleChangeYears}\r\n                        options={startYears}\r\n                      />\r\n                    </div>\r\n                    <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                      <p>Semesters</p>\r\n                      <Select\r\n                        placeholder={<div>Semesters...</div>}\r\n                        components={animatedComponents}\r\n                        isMulti\r\n                        onChange={handleChangeSemesters}\r\n                        options={startSemester}\r\n                      />\r\n                    </div>\r\n                    <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                      <p>Technologies</p>\r\n                      <Select\r\n                        placeholder={<div>Made with...</div>}\r\n                        components={animatedComponents}\r\n                        isMulti\r\n                        onChange={handleChangeTechnologies}\r\n                        options={techOptions}\r\n                        maxMenuHeight={250}\r\n                      />\r\n                    </div>\r\n                    <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                      <p>Awards</p>\r\n                      <Select\r\n                        placeholder={<div>Awarded with...</div>}\r\n                        components={animatedComponents}\r\n                        isMulti\r\n                        onChange={handleChangeAwards}\r\n                        options={awarded}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"mt-3 me-0 w-50 col-xs-6\">\r\n                      <p>Sort by</p>\r\n                      <Select\r\n                        placeholder={<div>Oldest to latest</div>}\r\n                        className=\"basic-single\"\r\n                        classNamePrefix=\"select\"\r\n                        name=\"color\"\r\n                        onChange={handleChangeSortBy}\r\n                        options={sortBy}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"apply-filter-btn-wrapper\">\r\n                  <CButton\r\n                    className=\"apply-filter-btn\"\r\n                    onClick={handleApplyFilter}\r\n                  >\r\n                    Apply Filter\r\n                  </CButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCollapse>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CSidebar;\r\n","C:\\Users\\Admin\\Desktop\\399\\main\\project-team-11\\capfolio\\src\\components\\SearchBar.js",[],[],{"ruleId":"240","severity":1,"message":"241","line":1,"column":10,"nodeType":"242","messageId":"243","endLine":1,"endColumn":18},{"ruleId":"240","severity":1,"message":"244","line":17,"column":9,"nodeType":"242","messageId":"243","endLine":17,"endColumn":17},{"ruleId":"240","severity":1,"message":"245","line":19,"column":10,"nodeType":"242","messageId":"243","endLine":19,"endColumn":14},{"ruleId":"240","severity":1,"message":"246","line":19,"column":16,"nodeType":"242","messageId":"243","endLine":19,"endColumn":23},{"ruleId":"240","severity":1,"message":"247","line":20,"column":10,"nodeType":"242","messageId":"243","endLine":20,"endColumn":19},{"ruleId":"240","severity":1,"message":"248","line":20,"column":21,"nodeType":"242","messageId":"243","endLine":20,"endColumn":33},{"ruleId":"240","severity":1,"message":"249","line":27,"column":10,"nodeType":"242","messageId":"243","endLine":27,"endColumn":16},{"ruleId":"240","severity":1,"message":"250","line":27,"column":18,"nodeType":"242","messageId":"243","endLine":27,"endColumn":27},{"ruleId":"240","severity":1,"message":"251","line":60,"column":11,"nodeType":"242","messageId":"243","endLine":60,"endColumn":17},{"ruleId":"240","severity":1,"message":"252","line":61,"column":11,"nodeType":"242","messageId":"243","endLine":61,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":92,"column":6,"nodeType":"255","endLine":92,"endColumn":8,"suggestions":"256"},{"ruleId":"253","severity":1,"message":"257","line":96,"column":6,"nodeType":"255","endLine":96,"endColumn":8,"suggestions":"258"},{"ruleId":"240","severity":1,"message":"259","line":105,"column":9,"nodeType":"242","messageId":"243","endLine":105,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":239,"column":13,"nodeType":"262","messageId":"263","endLine":239,"endColumn":58,"fix":"264"},{"ruleId":"265","severity":1,"message":"266","line":241,"column":15,"nodeType":"262","endLine":241,"endColumn":37},{"ruleId":"240","severity":1,"message":"241","line":1,"column":10,"nodeType":"242","messageId":"243","endLine":1,"endColumn":18},{"ruleId":"240","severity":1,"message":"267","line":8,"column":8,"nodeType":"242","messageId":"243","endLine":8,"endColumn":18},{"ruleId":"240","severity":1,"message":"268","line":10,"column":28,"nodeType":"242","messageId":"243","endLine":10,"endColumn":33},{"ruleId":"240","severity":1,"message":"269","line":11,"column":28,"nodeType":"242","messageId":"243","endLine":11,"endColumn":33},{"ruleId":"240","severity":1,"message":"270","line":19,"column":8,"nodeType":"242","messageId":"243","endLine":19,"endColumn":14},{"ruleId":"240","severity":1,"message":"271","line":25,"column":7,"nodeType":"242","messageId":"243","endLine":25,"endColumn":17},{"ruleId":"240","severity":1,"message":"272","line":30,"column":7,"nodeType":"242","messageId":"243","endLine":30,"endColumn":9},{"ruleId":"240","severity":1,"message":"273","line":41,"column":10,"nodeType":"242","messageId":"243","endLine":41,"endColumn":14},{"ruleId":"240","severity":1,"message":"274","line":41,"column":16,"nodeType":"242","messageId":"243","endLine":41,"endColumn":23},{"ruleId":"240","severity":1,"message":"275","line":63,"column":9,"nodeType":"242","messageId":"243","endLine":63,"endColumn":15},{"ruleId":"253","severity":1,"message":"257","line":87,"column":6,"nodeType":"255","endLine":87,"endColumn":8,"suggestions":"276"},{"ruleId":"240","severity":1,"message":"259","line":96,"column":9,"nodeType":"242","messageId":"243","endLine":96,"endColumn":19},{"ruleId":"240","severity":1,"message":"277","line":154,"column":12,"nodeType":"242","messageId":"243","endLine":154,"endColumn":22},{"ruleId":"240","severity":1,"message":"278","line":155,"column":12,"nodeType":"242","messageId":"243","endLine":155,"endColumn":21},{"ruleId":"253","severity":1,"message":"279","line":165,"column":10,"nodeType":"255","endLine":165,"endColumn":20,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":392,"column":28,"nodeType":"283","messageId":"284","endLine":392,"endColumn":30},{"ruleId":"240","severity":1,"message":"285","line":55,"column":9,"nodeType":"242","messageId":"243","endLine":55,"endColumn":15},{"ruleId":"240","severity":1,"message":"286","line":151,"column":9,"nodeType":"242","messageId":"243","endLine":151,"endColumn":25},{"ruleId":"287","severity":1,"message":"288","line":243,"column":24,"nodeType":"289","messageId":"284","endLine":243,"endColumn":26},{"ruleId":"290","severity":1,"message":"291","line":258,"column":37,"nodeType":"289","messageId":"292","endLine":258,"endColumn":38},{"ruleId":"290","severity":1,"message":"291","line":258,"column":48,"nodeType":"289","messageId":"292","endLine":258,"endColumn":49},{"ruleId":"240","severity":1,"message":"245","line":24,"column":23,"nodeType":"242","messageId":"243","endLine":24,"endColumn":27},{"ruleId":"265","severity":1,"message":"266","line":94,"column":17,"nodeType":"262","endLine":94,"endColumn":74},{"ruleId":"265","severity":1,"message":"266","line":130,"column":17,"nodeType":"262","endLine":130,"endColumn":74},{"ruleId":"240","severity":1,"message":"293","line":39,"column":18,"nodeType":"242","messageId":"243","endLine":39,"endColumn":27},{"ruleId":"240","severity":1,"message":"294","line":40,"column":20,"nodeType":"242","messageId":"243","endLine":40,"endColumn":31},{"ruleId":"240","severity":1,"message":"295","line":4,"column":10,"nodeType":"242","messageId":"243","endLine":4,"endColumn":14},{"ruleId":"240","severity":1,"message":"296","line":4,"column":16,"nodeType":"242","messageId":"243","endLine":4,"endColumn":24},{"ruleId":"240","severity":1,"message":"297","line":14,"column":10,"nodeType":"242","messageId":"243","endLine":14,"endColumn":15},{"ruleId":"287","severity":1,"message":"288","line":27,"column":48,"nodeType":"289","messageId":"284","endLine":27,"endColumn":50},{"ruleId":"287","severity":1,"message":"288","line":32,"column":48,"nodeType":"289","messageId":"284","endLine":32,"endColumn":50},{"ruleId":"287","severity":1,"message":"288","line":49,"column":62,"nodeType":"289","messageId":"284","endLine":49,"endColumn":64},{"ruleId":"287","severity":1,"message":"288","line":62,"column":36,"nodeType":"289","messageId":"284","endLine":62,"endColumn":38},{"ruleId":"287","severity":1,"message":"288","line":74,"column":62,"nodeType":"289","messageId":"284","endLine":74,"endColumn":64},{"ruleId":"253","severity":1,"message":"298","line":105,"column":6,"nodeType":"255","endLine":105,"endColumn":8,"suggestions":"299"},{"ruleId":"253","severity":1,"message":"300","line":109,"column":6,"nodeType":"255","endLine":109,"endColumn":8,"suggestions":"301"},{"ruleId":"240","severity":1,"message":"302","line":1,"column":38,"nodeType":"242","messageId":"243","endLine":1,"endColumn":44},{"ruleId":"240","severity":1,"message":"303","line":3,"column":16,"nodeType":"242","messageId":"243","endLine":3,"endColumn":24},{"ruleId":"240","severity":1,"message":"304","line":3,"column":26,"nodeType":"242","messageId":"243","endLine":3,"endColumn":40},{"ruleId":"240","severity":1,"message":"305","line":3,"column":42,"nodeType":"242","messageId":"243","endLine":3,"endColumn":52},{"ruleId":"240","severity":1,"message":"241","line":4,"column":10,"nodeType":"242","messageId":"243","endLine":4,"endColumn":18},{"ruleId":"240","severity":1,"message":"306","line":4,"column":20,"nodeType":"242","messageId":"243","endLine":4,"endColumn":27},{"ruleId":"240","severity":1,"message":"307","line":4,"column":29,"nodeType":"242","messageId":"243","endLine":4,"endColumn":38},{"ruleId":"240","severity":1,"message":"308","line":4,"column":52,"nodeType":"242","messageId":"243","endLine":4,"endColumn":66},{"ruleId":"240","severity":1,"message":"309","line":4,"column":98,"nodeType":"242","messageId":"243","endLine":4,"endColumn":108},{"ruleId":"240","severity":1,"message":"267","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":18},{"ruleId":"240","severity":1,"message":"310","line":89,"column":12,"nodeType":"242","messageId":"243","endLine":89,"endColumn":19},{"ruleId":"240","severity":1,"message":"311","line":89,"column":21,"nodeType":"242","messageId":"243","endLine":89,"endColumn":31},{"ruleId":"240","severity":1,"message":"241","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":18},{"ruleId":"240","severity":1,"message":"306","line":2,"column":20,"nodeType":"242","messageId":"243","endLine":2,"endColumn":27},{"ruleId":"240","severity":1,"message":"307","line":2,"column":29,"nodeType":"242","messageId":"243","endLine":2,"endColumn":38},{"ruleId":"240","severity":1,"message":"312","line":2,"column":40,"nodeType":"242","messageId":"243","endLine":2,"endColumn":50},{"ruleId":"240","severity":1,"message":"308","line":2,"column":52,"nodeType":"242","messageId":"243","endLine":2,"endColumn":66},{"ruleId":"240","severity":1,"message":"313","line":2,"column":68,"nodeType":"242","messageId":"243","endLine":2,"endColumn":73},{"ruleId":"240","severity":1,"message":"314","line":2,"column":75,"nodeType":"242","messageId":"243","endLine":2,"endColumn":84},{"ruleId":"240","severity":1,"message":"315","line":2,"column":86,"nodeType":"242","messageId":"243","endLine":2,"endColumn":90},{"ruleId":"240","severity":1,"message":"316","line":2,"column":92,"nodeType":"242","messageId":"243","endLine":2,"endColumn":96},{"ruleId":"240","severity":1,"message":"309","line":2,"column":98,"nodeType":"242","messageId":"243","endLine":2,"endColumn":108},{"ruleId":"240","severity":1,"message":"317","line":2,"column":110,"nodeType":"242","messageId":"243","endLine":2,"endColumn":120},{"ruleId":"240","severity":1,"message":"318","line":2,"column":122,"nodeType":"242","messageId":"243","endLine":2,"endColumn":131},{"ruleId":"240","severity":1,"message":"319","line":2,"column":133,"nodeType":"242","messageId":"243","endLine":2,"endColumn":144},{"ruleId":"253","severity":1,"message":"320","line":29,"column":42,"nodeType":"242","endLine":29,"endColumn":49},{"ruleId":"253","severity":1,"message":"321","line":32,"column":6,"nodeType":"255","endLine":32,"endColumn":8,"suggestions":"322"},{"ruleId":"287","severity":1,"message":"288","line":102,"column":26,"nodeType":"289","messageId":"284","endLine":102,"endColumn":28},{"ruleId":"253","severity":1,"message":"323","line":37,"column":6,"nodeType":"255","endLine":37,"endColumn":8,"suggestions":"324"},{"ruleId":"240","severity":1,"message":"325","line":2,"column":17,"nodeType":"242","messageId":"243","endLine":2,"endColumn":25},{"ruleId":"240","severity":1,"message":"326","line":2,"column":27,"nodeType":"242","messageId":"243","endLine":2,"endColumn":34},{"ruleId":"240","severity":1,"message":"327","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":7,"column":10,"nodeType":"242","messageId":"243","endLine":7,"endColumn":18},{"ruleId":"240","severity":1,"message":"307","line":7,"column":29,"nodeType":"242","messageId":"243","endLine":7,"endColumn":38},{"ruleId":"240","severity":1,"message":"328","line":8,"column":10,"nodeType":"242","messageId":"243","endLine":8,"endColumn":13},{"ruleId":"287","severity":1,"message":"288","line":96,"column":28,"nodeType":"289","messageId":"284","endLine":96,"endColumn":30},{"ruleId":"240","severity":1,"message":"329","line":118,"column":10,"nodeType":"242","messageId":"243","endLine":118,"endColumn":24},{"ruleId":"240","severity":1,"message":"330","line":119,"column":7,"nodeType":"242","messageId":"243","endLine":119,"endColumn":19},{"ruleId":"240","severity":1,"message":"331","line":124,"column":10,"nodeType":"242","messageId":"243","endLine":124,"endColumn":21},{"ruleId":"240","severity":1,"message":"332","line":124,"column":23,"nodeType":"242","messageId":"243","endLine":124,"endColumn":37},{"ruleId":"240","severity":1,"message":"327","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":7,"column":10,"nodeType":"242","messageId":"243","endLine":7,"endColumn":18},{"ruleId":"240","severity":1,"message":"328","line":8,"column":10,"nodeType":"242","messageId":"243","endLine":8,"endColumn":13},{"ruleId":"287","severity":1,"message":"288","line":96,"column":28,"nodeType":"289","messageId":"284","endLine":96,"endColumn":30},{"ruleId":"240","severity":1,"message":"329","line":118,"column":10,"nodeType":"242","messageId":"243","endLine":118,"endColumn":24},{"ruleId":"240","severity":1,"message":"330","line":119,"column":7,"nodeType":"242","messageId":"243","endLine":119,"endColumn":19},{"ruleId":"240","severity":1,"message":"331","line":124,"column":10,"nodeType":"242","messageId":"243","endLine":124,"endColumn":21},{"ruleId":"240","severity":1,"message":"332","line":124,"column":23,"nodeType":"242","messageId":"243","endLine":124,"endColumn":37},"no-unused-vars","'Collapse' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'responses' is assigned a value but never used.","'setResponses' is assigned a value but never used.","'lowRes' is assigned a value but never used.","'setLowRes' is assigned a value but never used.","'folder' is assigned a value but never used.","'filename' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.","ArrayExpression",["333"],"React Hook useEffect has a missing dependency: 'getProject'. Either include it or remove the dependency array.",["334"],"'properties' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"335","text":"336"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'LikeButton' is defined but never used.","'Heart' is defined but never used.","'Views' is defined but never used.","'Select' is defined but never used.","'bucketName' is assigned a value but never used.","'s3' is assigned a value but never used.","'tech' is assigned a value but never used.","'setTech' is assigned a value but never used.","'string' is assigned a value but never used.",["337"],"'githubLink' is assigned a value but never used.","'VideoLink' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'projects'. Either exclude it or remove the dependency array. Outer scope values like 'projects' aren't valid dependencies because mutating them doesn't re-render the component.",["338"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'config' is assigned a value but never used.","'handleChangeTeam' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'setGithub' is assigned a value but never used.","'setLinkedin' is assigned a value but never used.","'Link' is defined but never used.","'Navigate' is defined but never used.","'likes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLikes'. Either include it or remove the dependency array.",["339"],"React Hook useEffect has a missing dependency: 'initialLikes'. Either include it or remove the dependency array.",["340"],"'useRef' is defined but never used.","'useMatch' is defined but never used.","'useResolvedPat' is defined but never used.","'useContext' is defined but never used.","'CButton' is defined but never used.","'CCollapse' is defined but never used.","'CListGroupItem' is defined but never used.","'CCardImage' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'CListGroup' is defined but never used.","'CCard' is defined but never used.","'CCardBody' is defined but never used.","'CRow' is defined but never used.","'CCol' is defined but never used.","'CCardTitle' is defined but never used.","'CCardText' is defined but never used.","'CCardFooter' is defined but never used.","The ref value 'textRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'textRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'textRef'. Either include it or remove the dependency array.",["341"],"React Hook useEffect has a missing dependency: 'props.TeamId'. Either include it or remove the dependency array.",["342"],"'useState' is defined but never used.","'classes' is defined but never used.","'ReactDOM' is defined but never used.","'all' is defined but never used.","'selectedOption' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'isClearable' is assigned a value but never used.","'setIsClearable' is assigned a value but never used.",{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},[7296,7296]," rel=\"noreferrer\"",{"desc":"345","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [getComments]",{"range":"358","text":"359"},"Update the dependencies array to be: [getProject]",{"range":"360","text":"361"},{"range":"362","text":"361"},"Update the dependencies array to be: []",{"range":"363","text":"364"},"Update the dependencies array to be: [getLikes]",{"range":"365","text":"366"},"Update the dependencies array to be: [initialLikes]",{"range":"367","text":"368"},"Update the dependencies array to be: [textRef]",{"range":"369","text":"370"},"Update the dependencies array to be: [props.TeamId]",{"range":"371","text":"372"},[3208,3210],"[getComments]",[3261,3263],"[getProject]",[2770,2772],[5281,5291],"[]",[3115,3117],"[getLikes]",[3170,3172],"[initialLikes]",[927,929],"[textRef]",[1293,1295],"[props.TeamId]"]