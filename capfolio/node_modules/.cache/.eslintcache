[{"C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\index.js":"1","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\App.js":"2","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\ScrollToTop.js":"3","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\projectView.js":"4","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\projectSubmit.js":"5","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\Navbar.js":"6","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\AuthContext.js":"7","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\pages\\Home.js":"8","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\pages\\SignUp.js":"9","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\pages\\Login.js":"10","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\pages\\Profile.js":"11","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\Search.js":"12","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\components\\likeButton.js":"13","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\ProjectGallery.js":"14","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\Sidebar.js":"15","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\components\\awardBanner.js":"16","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\components\\SearchBar.js":"17"},{"size":864,"mtime":1682573934670,"results":"18","hashOfConfig":"19"},{"size":1221,"mtime":1682485128092,"results":"20","hashOfConfig":"19"},{"size":287,"mtime":1682124018839,"results":"21","hashOfConfig":"19"},{"size":10048,"mtime":1682485128099,"results":"22","hashOfConfig":"19"},{"size":9564,"mtime":1682640992956,"results":"23","hashOfConfig":"19"},{"size":3910,"mtime":1682414707856,"results":"24","hashOfConfig":"19"},{"size":935,"mtime":1682414707856,"results":"25","hashOfConfig":"19"},{"size":288,"mtime":1682414707860,"results":"26","hashOfConfig":"19"},{"size":4551,"mtime":1682485128097,"results":"27","hashOfConfig":"19"},{"size":3271,"mtime":1682485128095,"results":"28","hashOfConfig":"19"},{"size":4621,"mtime":1682485128096,"results":"29","hashOfConfig":"19"},{"size":987,"mtime":1682249534331,"results":"30","hashOfConfig":"19"},{"size":3856,"mtime":1682485128094,"results":"31","hashOfConfig":"19"},{"size":3456,"mtime":1682654266150,"results":"32","hashOfConfig":"19"},{"size":7376,"mtime":1682414707859,"results":"33","hashOfConfig":"19"},{"size":205,"mtime":1682124018841,"results":"34","hashOfConfig":"19"},{"size":1020,"mtime":1682249534333,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1toijfx",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\index.js",[],[],"C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\App.js",[],[],"C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\ScrollToTop.js",[],[],"C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\projectView.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './projectView.css';\r\nimport redheart from './images/red-heart.png';\r\nimport avatar from './images/avatar.png';\r\nimport mainImage from './images/homepage-mockup.png';\r\nimport secondimage from './images/secondimage.png';\r\nimport thirdimage from './images/thirdimage.png';\r\nimport submitcomment from './images/send-button.png'\r\nimport { Slide } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css';\r\nimport LikeButton from \"./components/likeButton\";\r\nimport { CButton, } from '@coreui/react';\r\nimport { withTheme } from '@emotion/react';\r\nimport gitHubLogo from './images/github-mark-white.png';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBCheckbox,\r\n    MDBBtn,\r\n    MDBTextArea\r\n} from 'mdb-react-ui-kit';\r\n\r\n\r\n\r\nconst ProjectView = () => {\r\n    const params = useParams();\r\n    const [comments, setComments] = useState('');\r\n    const [projects, setProject] = useState('');\r\n    const [likes, setLikes] = useState('');\r\n\r\n    // const blueBoxRef = useRef();\r\n\r\n\r\n    const getProject = async () => {\r\n     \r\n\r\n        const response = await fetch(\r\n            \"/projects/project?id=\" + params.id\r\n        ).then((response) => response.json());\r\n\r\n\r\n        console.log(response)\r\n        setProject(response)\r\n        \r\n    };\r\n\r\n\r\n    // Function to collect data\r\n    const getComments = async () => {\r\n        const response = await fetch(\r\n            \"/projects/comment?id=\" + params.id\r\n        ).then((response) => response.json());\r\n\r\n        setComments(response);\r\n    };\r\n\r\n\r\n\r\n    \r\n\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        var CommentDesc = document.getElementById('comment').value\r\n     \r\n        \r\n        fetch('/projects/PostComment?id=' + params.id, {\r\n            method: 'POST',\r\n            headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                \"CommentDesc\": CommentDesc,\r\n             \r\n            })\r\n        }).then(() => {\r\n            console.log('comment Added')\r\n            getComments();\r\n\r\n        })\r\n        document.getElementById('comment').value = ''\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getComments();\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        getProject();\r\n    }, []);\r\n    \r\n\r\n\r\n\r\n    const buttonStyle = {\r\n        width: \"30px\",\r\n        background: 'none',\r\n        border: '0px',\r\n        class: 'arrows'\r\n\r\n    };\r\n\r\n    const properties = {\r\n        prevArrow: <button style={{ ...buttonStyle }}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" fill=\"#fff\"><path d=\"M242 180.6v-138L0 256l242 213.4V331.2h270V180.6z\" /></svg></button>,\r\n        nextArrow: <button style={{ ...buttonStyle }}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" fill=\"#fff\"><path d=\"M512 256L270 42.6v138.2H0v150.6h270v138z\" /></svg></button>\r\n    }\r\n\r\n\r\n\r\n    const Example = () => {\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Slide indicators={true} duration={2000} className='slideshow' {...properties}>\r\n\r\n                <div className=\"each-slide-effect\">\r\n                    <div style={{ 'backgroundImage': `url(${mainImage})` }}>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"each-slide-effect\">\r\n                    <div style={{ 'backgroundImage': `url(${secondimage})` }}>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"each-slide-effect\">\r\n                    <div style={{ 'backgroundImage': `url(${thirdimage})` }}>\r\n\r\n                    </div>\r\n                </div>\r\n            </Slide>\r\n\r\n        );\r\n    };\r\n\r\n\r\n\r\n    const Header = ({ project }) => {\r\n        return (\r\n            <div className='centerTitle'>\r\n                <p className='projecttitle'>{project.ProjectName}</p>\r\n\r\n                <div className=\"names\">\r\n                    <p className='companyname'>By  {project.TeamName} -&nbsp;</p>\r\n\r\n                    {/*{project.authors.map((name, i) =>*/}\r\n                    {/*    <div classname='name'>*/}\r\n                    {/*        <p key={`key${i}`}>{name},&nbsp;</p>*/}\r\n                    {/*    </div>*/}\r\n                    {/*)}*/}\r\n                </div>\r\n\r\n\r\n                <div className='techUsed'>\r\n\r\n                <div className='tech'>\r\n                       <p>\"React\"</p>\r\n                    </div>\r\n                    <div className='tech'>\r\n                        <p>\"HTML\"</p>\r\n                    </div>\r\n                    <div className='tech'>\r\n                        <p>\"JS\"</p>\r\n                    </div>\r\n\r\n\r\n                    {/*{project.tech.map((tech, i) =>*/}\r\n                    {/*    <div className='tech'>*/}\r\n                    {/*        <p key={`Key${i}`}>{tech}</p>*/}\r\n                    {/*    </div>*/}\r\n                    {/*)}*/}\r\n                </div>\r\n\r\n                <div className='pv-buttons'>\r\n                    <CButton>  <a href={project.githubLink} target=\"_blank\"> <img src={gitHubLogo}></img>  GitHub</a></CButton>\r\n                    <div>\r\n                        <div className='pv-likeButton'>\r\n                            <LikeButton likenumber={params.id}/>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n\r\n    //Used to set bluebox height to size according to right column\r\n    // const rightColumnRef = useRef();\r\n    // const blueBoxRef = useRef();\r\n\r\n    // useEffect(() => {\r\n    //     const marginTop = parseFloat(window.getComputedStyle(rightColumnRef.current).marginTop);\r\n    //     const rightColumnHeight = rightColumnRef.current.offsetHeight + marginTop + 20;\r\n    //     blueBoxRef.current.style.setProperty('--right-column-height', `${rightColumnHeight}px`);\r\n    // }, []);\r\n    const rightColumnCallbackRef = (node) => {\r\n        if (node) {\r\n            const marginTop = parseFloat(window.getComputedStyle(node).marginTop);\r\n            const rightColumnHeight = node.offsetHeight + marginTop + 20;\r\n            const blueBoxElement = document.querySelector('.bluebox');\r\n            if (blueBoxElement) {\r\n                blueBoxElement.style.setProperty('--right-column-height', `${rightColumnHeight}px`);\r\n            }\r\n        }\r\n    };\r\n    \r\n    // const blueBoxCallbackRef = (node) => {\r\n    //     if (node) {\r\n    //         blueBoxRef.current = node;\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n        \r\n        \r\n            <div className='bluebox-top'></div>\r\n            <div className='bluebox' style={{ '--right-column-height': 'auto' }}>\r\n                <div className='p-row'>\r\n                    <div className='column headerleft'>\r\n                        <div className='image'>\r\n                            <Example />\r\n                        </div>\r\n                    </div>\r\n                    <div className='column headerright' ref={rightColumnCallbackRef}>\r\n                        <div className='teammembers'>\r\n                            {projects && projects.map((project) => (\r\n                                <Header key={project.id} project={project} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className=\"rowcontent\"> */}\r\n            <div className='projectInformation-wrapper'>\r\n                <div className='projectInformation'>\r\n                    <h2>About {projects && projects.map((project) => project.ProjectName)}</h2>\r\n                    <p className='about'>{projects && projects.map((project) => project.ProjectIntro)} </p>\r\n                    <h2>Project Approach</h2>\r\n                    <p className='projectApproach'>{projects && projects.map((project) => project.Project_Approach)}</p>\r\n                    \r\n                    <iframe width=\"100%\" height=\"350vh\" src={projects && projects.map((project) => project.VideoLink)}>\r\n                    </iframe>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* <div className=\"column right\">  */}\r\n\r\n            <div className='commentbox'>\r\n\r\n                <div className='comments'>\r\n                    <div className='commentheading'>\r\n                        <h2>Comments</h2>\r\n\r\n                    </div>\r\n                    <div className='writecomment'>\r\n\r\n\r\n                        <form onSubmit={handleSubmit}>\r\n\r\n\r\n                            <MDBTextArea label='Write your comment here' id='comment' className='textAreaExample' rows={4} required onSubmit={handleSubmit} />\r\n\r\n                            <button className='sendcomment'>\r\n                                <CButton>Post Comment</CButton>\r\n                            </button>\r\n                        </form>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='showcomments'>\r\n                        {comments &&\r\n                            comments.map((comment) => (\r\n\r\n                                <div className='comment'>\r\n                                    <div className='commentDetails'>\r\n                                        <img className='comment-avatar' src={avatar} alt=\"avatar\"></img>\r\n                                        <p className='commentname'>{comment.FirstName}</p>\r\n\r\n                                        <p className='commentUsertype'>{comment.UserType}</p>\r\n                                        <p className='commentdate'>{comment.createdTime}</p>\r\n                                    </div>\r\n                                    <p className='commenttext'>{comment.CommentDesc}</p>\r\n                                </div>\r\n                            ))}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        //     </div>\r\n        // </div>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default ProjectView;","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\projectSubmit.js",["113","114","115","116","117"],[],"import React, { useState, ChangeEvent, KeyboardEventHandler } from 'react';\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBCheckbox,\r\n    MDBBtn,\r\n    MDBTextArea\r\n} from 'mdb-react-ui-kit';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Select from 'react-select';\r\nimport './projectSubmit.css';\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\nexport default function ProjectSubmit() {\r\n    const technologies = [\r\n        { value: \"blues\", label: \"React\" },\r\n        { value: \"rock\", label: \"Javascript\" },\r\n        { value: \"jazz\", label: \"HTML\" },\r\n        { value: \"orchestra\", label: \"C#\" },\r\n    ];\r\n\r\n    const years = [\r\n        { value: \"2017\", label: \"2017\" },\r\n        { value: \"2018\", label: \"2018\" },\r\n        { value: \"2019\", label: \"2019\" },\r\n        { value: \"2020\", label: \"2020\" },\r\n        { value: \"2021\", label: \"2021\" },\r\n        { value: \"2022\", label: \"2022\" },\r\n        { value: \"2023\", label: \"2023\" },\r\n    ];\r\n\r\n    const semester = [\r\n        { value: \"1\", label: \"Semester One\" },\r\n        { value: \"2\", label: \"Semester Two\" },\r\n\r\n    ];\r\n\r\n\r\n    const animatedComponents = makeAnimated();\r\n\r\n    const [selectedYears, setSelectedYears] = useState([]);\r\n    const handleChangeYears = (selectedYears) => {\r\n        setSelectedYears(selectedYears);\r\n    };\r\n\r\n    const [selectedSemesters, setSelectedSemesters] = useState([]);\r\n    const handleChangeSemesters = (selectedSemesters) => {\r\n        setSelectedSemesters(selectedSemesters);\r\n    };\r\n\r\n    const [selectedTechnologies, setSelectedTechnologies] = useState([]);\r\n    const handleChangeTechnologies = (selectedTechnologies) => {\r\n        setSelectedTechnologies(selectedTechnologies);\r\n    };\r\n\r\n    const [selectedTeam, setSelectedTeam] = useState([]);\r\n    const handleChangeTeam = (selectedTeam) => {\r\n        setSelectedTeam(selectedTeam);\r\n    }\r\n\r\n    const [imageUrls, setImageUrls] = useState([]);\r\n\r\n\r\n    const handleImageChange = (e) => {\r\n        const files = e.target.files;\r\n        const urls = [];\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            const reader = new FileReader();\r\n            reader.onload = function (event) {\r\n                urls.push(event.target.result);\r\n                if (urls.length === files.length) {\r\n                    setImageUrls([...imageUrls, ...urls]);\r\n                }\r\n            };\r\n            reader.readAsDataURL(files[i]);\r\n        }\r\n\r\n        console.log(imageUrls)\r\n   }\r\n    \r\n\r\n    function handleDelete(index) {\r\n        setImageUrls(imageUrls.filter((_, i) => i !== index));\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        \r\n        const TeamName = document.getElementById('company').value;\r\n        const projectName = document.getElementById('projectName').value;\r\n        const capstoneYear = selectedYears;\r\n        const capstoneSemester = selectedSemesters;\r\n        const ProjectIntro = document.getElementById('intro').value;\r\n        const Project_About = document.getElementById('about').value;\r\n        const Project_Approach = document.getElementById('approach').value;\r\n        const tech = selectedTechnologies;\r\n        const teamMembers = selectedTeam;\r\n        const files = imageUrls\r\n        const VideoLink = document.getElementById('yt').value;\r\n        const githubLink = document.getElementById('github').value;\r\n\r\n\r\n\r\n        //const string = String.raw`C:\\Development\\profile\\aboutme.html`;\r\n        //let newstring = string.split('\\\\').join('/');\r\n\r\n\r\n\r\n\r\n        //Puts the objects into an array\r\n        const arrayTech = [];\r\n        const usersArray = []\r\n\r\n        tech.forEach(e => arrayTech.push(e.label))\r\n\r\n        for (let i = 0; i < arrayTech.length; i++) {\r\n            arrayTech[i] = arrayTech[i].replace(/'/g, \"\\\"\");\r\n        }\r\n\r\n        teamMembers.forEach(e => usersArray.push(e.label))\r\n        for (let i = 0; i < usersArray.length; i++) {\r\n            usersArray[i] = usersArray[i].replace(/'/g, \"\\\"\");\r\n        }\r\n\r\n\r\n        let yearString = capstoneYear.value;\r\n\r\n        let semesterString = capstoneSemester.label;\r\n        if (semesterString == 'Semester One') {\r\n            semesterString = 1\r\n        }\r\n        else {\r\n            semesterString = 2\r\n        }\r\n\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            files[i] = files[i].replace(/'/g, \"\\\"\");\r\n        }\r\n\r\n        const data2 = {\r\n            \"ProjectName\": \"'\" + projectName + \"'\",\r\n            \"IsApproved\": 0,\r\n            \"projectDec\": \"'\" + Project_About + \"'\",\r\n            \"githubLink\": \"'\" + githubLink + \"'\",\r\n            \"capstoneYear\": \"'\" + yearString + \"'\",\r\n            \"capstoneSemester\": semesterString,\r\n            \"adminID_FK\": 7,\r\n            \"TeamName\": TeamName,\r\n            \"VideoLink\": \"'\" + VideoLink + \"'\",\r\n            \"ProjectIntro\": \"'\" + ProjectIntro + \"'\",\r\n            \"Project_Approach\": \"'\" + Project_Approach + \"'\",\r\n            \"Files\": files,\r\n            \"Technologies\": arrayTech,\r\n            \"Users\": usersArray\r\n        }\r\n        const project = JSON.parse(JSON.stringify(data2))\r\n        console.log(project);\r\n\r\n\r\n\r\n        fetch('/project/FormAddProject', {\r\n            method: 'POST',\r\n            headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n            body: {\r\n\r\n                project\r\n                //\"ProjectName\": projectName,\r\n                //\"IsApproved\": 0,\r\n                //\"projectDec\": Project_About,\r\n                //\"githubLink\": githubLink,\r\n                //\"capstoneYear\": capstoneYear,\r\n                //\"capstoneSemester\": capstoneSemester,\r\n                //\"adminID_FK\": 7,\r\n                //\"TeamName\": TeamName,\r\n                //\"VideoLink\": VideoLink,\r\n                //\"ProjectIntro\": ProjectIntro,\r\n                //\"Project_Approach\": Project_Approach,\r\n                //\"Files\": [],\r\n                //\"Technologies\": tech,\r\n                //\"Users\": teamMembers\r\n\r\n            }\r\n        }).then(() => {\r\n            console.log('ProjectAdded')\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form className='projectsubmitform' onSubmit={handleSubmit}>\r\n                <MDBRow className='mb-4'>\r\n                    <MDBCol>\r\n                        <MDBInput id='company' label='Company Name' />\r\n                    </MDBCol>\r\n                    <MDBCol>\r\n                        <MDBInput id='projectName' label='Project Title' />\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n\r\n                <MDBRow className='mb-4'>\r\n                    <MDBCol>\r\n                        <Select\r\n                            id='year'\r\n                            className=\"basic-single\"\r\n                            classNamePrefix=\"select\"\r\n                            isClearable\r\n                            isSearchable\r\n                            name=\"year\"\r\n                            options={years}\r\n                            components={animatedComponents}\r\n                            placeholder='Select year project was completed'\r\n                            onChange={handleChangeYears}\r\n                        />\r\n                    </MDBCol>\r\n                    <MDBCol>\r\n                        <Select\r\n                            id='semester'\r\n                            className=\"basic-single\"\r\n                            classNamePrefix=\"select\"\r\n                            isClearable\r\n                            isSearchable\r\n                            components={animatedComponents}\r\n                            name=\"year\"\r\n                            options={semester}\r\n                            placeholder='Select semester project was completed'\r\n                            onChange={handleChangeSemesters}\r\n\r\n                        />\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                <MDBTextArea label='Project introduction' id='intro' className='textAreaExample' rows={2} />\r\n                <MDBTextArea label='Tell us about your project' id='about' className='textAreaExample' rows={4} />\r\n                <MDBTextArea label='Tell us about your project approach' id='approach' className='textAreaExample' rows={4} />\r\n\r\n                <CreatableSelect id='tech' isMulti components={animatedComponents} options={technologies} onChange={handleChangeTechnologies} placeholder='Select from the drop down or type' />\r\n                <CreatableSelect id='teamMembers' components={animatedComponents} isMulti onChange={handleChangeTeam} placeholder=\"type UPI's of students involved in this project\" />\r\n\r\n                <MDBInput label='Github Link' id='github' type='url' />\r\n                <MDBInput label='Youtube demo link' id='yt' type='url' />\r\n<input\r\n        type=\"file\"\r\n        id=\"image-upload\"\r\n        name=\"image-upload\"\r\n        onChange={handleImageChange}\r\n        multiple\r\n      />\r\n\r\n\r\n                <div className='displayThumbnail'>\r\n                    {imageUrls.map((url, index) => (\r\n                        <div key={index} >\r\n                            <img className='thumbnail' src={url} alt={`Thumbnail ${index}`} />\r\n                            <button onClick={() => handleDelete(index)}>Remove</button>                </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <MDBBtn className='mb-4' type='submit' block>\r\n                    Submit Project!\r\n                </MDBBtn>\r\n            </form>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\Navbar.js",["118"],[],"import { Link, useMatch, useResolvedPath } from \"react-router-dom\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n    const { user, setUser } = useContext(AuthContext);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsAuthenticated(user !== null);\r\n    }, [user]);\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3000/auth/logout\");\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setUser(null);\r\n                setIsAuthenticated(false);\r\n                navigate(\"/\");\r\n            } else {\r\n                console.error(\"Error logging out:\", response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error logging out:\", error.message);\r\n        }\r\n    };\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!menuOpen);\r\n      };\r\n    return (\r\n        <nav className=\"navtop\">\r\n            <Link to=\"/\" className=\"site-title\">\r\n                <div className=\"logo\">\r\n                    <img\r\n                        src={require(\"./images/capfolio-logo-white.png\")}\r\n                        alt=\"Logo\"\r\n                    />\r\n                </div>\r\n            </Link>\r\n            <ul className=\"nav-desktop\">\r\n                {!isAuthenticated ? (\r\n                    <>\r\n                        <CustomLink to=\"/login\" className=\"button2\">\r\n                            Log in\r\n                        </CustomLink>\r\n                        <CustomLink to=\"/sign-up\" className=\"button2\">\r\n                            Sign Up\r\n                        </CustomLink>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <CustomLink to=\"/profile\" className=\"button2\">\r\n                            Profile\r\n                        </CustomLink>\r\n                        <CustomLink to=\"/\"className=\"button2\" onClick={handleLogout}>\r\n                            Logout\r\n                        </CustomLink>\r\n                    </>\r\n                )}\r\n            </ul>\r\n            <div className=\"menu-icon\" onClick={toggleMenu}>\r\n        <span className=\"menu-line\"></span>\r\n        <span className=\"menu-line\"></span>\r\n        <span className=\"menu-line\"></span>\r\n      </div> \r\n      <ul className={`nav-mobile ${menuOpen ? 'open' : ''}`}>\r\n      <div className='mobile-nav-btns'>\r\n                {!isAuthenticated ? (\r\n                    <>\r\n                        <CustomLink to=\"/login\" className=\"button2\">\r\n                            Log in\r\n                        </CustomLink>\r\n                        <CustomLink to=\"/sign-up\" className=\"button2\">\r\n                            Sign Up\r\n                        </CustomLink>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <CustomLink to=\"/profile\" className=\"button2\">\r\n                            Profile\r\n                        </CustomLink>\r\n                        <CustomLink to=\"/\"className=\"button2\" onClick={handleLogout}>\r\n                            Logout\r\n                        </CustomLink>\r\n                    </>\r\n                )}\r\n                </div>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nfunction CustomLink({ to, children, ...props }) {\r\n    const resolvedPath = useResolvedPath(to);\r\n    const isActive = useMatch({ path: resolvedPath.pathname, end: true });\r\n\r\n    return (\r\n        <li className={isActive ? \"active\" : \"\"}>\r\n            <Link to={to} {...props}>\r\n                {children}\r\n            </Link>\r\n        </li>\r\n    );\r\n}","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\AuthContext.js",[],[],"C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\pages\\Home.js",["119"],[],"import React from \"react\";\r\nimport Search from \"../Search\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport ProjectGallery from \"../ProjectGallery\";\r\n\r\n\r\nconst Home = () =>{\r\n    return (\r\n    <div>\r\n        <Search />\r\n        <ProjectGallery />\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Home;","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\pages\\SignUp.js",["120"],[],"import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport GoogleLogin from '../images/btn_google_signin_dark_pressed_web@2x.png';\r\nconst SignUp = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    switch (id) {\r\n      case 'firstName':\r\n        setFirstName(value);\r\n        break;\r\n      case 'lastName':\r\n        setLastName(value);\r\n        break;\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      case 'confirmPassword':\r\n        setConfirmPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    const response = await fetch('http://localhost:3000/auth/signup', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ firstName, lastName, email, password })\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      window.location.href = '/login';\r\n    } else {\r\n      alert('Failed to sign up');\r\n    }\r\n  }\r\n\r\n  return (\r\n    \r\n      <div className=\"container\">\r\n        <div className=\"auth-wrapper\">\r\n          <div className=\"auth-inner\">\r\n            <form className=\"cent\" onSubmit={handleSubmit}>\r\n              <h3>Sign Up</h3>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"firstName\"\r\n                    placeholder=\"First Name\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={lastName}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"lastName\"\r\n                    placeholder=\"Last Name\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"confirmPassword\"\r\n                    placeholder=\"Confirm password\"\r\n                />\r\n              </div>\r\n              <div className=\"d-grid\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n              <p className=\"forgot-password text-right\">\r\n                Already registered <Link to=\"/login\">Sign In?</Link>\r\n              </p>\r\n              <div>\r\n                <a id=\"loginButton\" href=\"http://localhost:3000/auth/google\"> \r\n                <img className='resize-google-button' src={GoogleLogin}/>\r\n                </a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n  );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\pages\\Login.js",["121","122"],[],"import React, { useState } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../AuthContext';\r\nimport './pages.css';\r\nimport GoogleLogin from '../images/btn_google_signin_dark_pressed_web@2x.png';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    switch (id) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch('http://localhost:3000/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      // Fetch the user data from the server\r\n      const userResponse = await fetch('http://localhost:3000/auth/user');\r\n      const userData = await userResponse.json();\r\n\r\n      // Update the context with the user data\r\n      setUser(userData);\r\n\r\n      // Redirect to the home page\r\n      window.location.href = '/';\r\n    } else {\r\n      alert('Failed to log in');\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div className=\"container\">\r\n        <div className=\"auth-wrapper\">\r\n          <div className=\"auth-inner\">\r\n            <form className=\"cent\" onSubmit={handleSubmit}>\r\n              <h3>Log in</h3>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                    id=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                />\r\n              </div>\r\n              <div className=\"d-grid\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Log in\r\n                </button>\r\n              </div>\r\n              <p className=\"forgot-password text-right\">\r\n                Forgot <a href=\"#\">password?</a>\r\n              </p>\r\n              <p className=\"register text-center\">\r\n                Don't have an account? <Link to=\"/sign-up\">Sign Up</Link>\r\n              </p>\r\n              <div>\r\n                <a id=\"loginButton\" href=\"http://localhost:3000/auth/google\">\r\n                <img className='resize-google-button' src={GoogleLogin}/>\r\n                </a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\pages\\Profile.js",["123","124","125"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../AuthContext\";\r\nimport './Profile.css';\r\nimport redHeartImage from '../images/red-heart.png';\r\nimport { Link } from \"react-router-dom\";\r\nimport icon from '../images/avatar.png';\r\n\r\nfunction Profile() {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [profession, setProfession] = useState('Software Engineer');\r\n    const [github, setGithub] = useState('https://github.com');\r\n    const [linkedin, setLinkedin] = useState('https://linkedin.com');\r\n    const [description, setDescription] = useState('I am a CompSci student at the University of Auckland and I have taken COMPSCI399 in 2023 Semester 1.');\r\n    const [picture, setPicture] = useState('');\r\n    //alert(\"WTF\");\r\n    //alert(\"WTF\");\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3000/auth/user');\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('User not authenticated');\r\n                }\r\n\r\n                const userData = await response.json();\r\n                setName(`${userData.FirstName} ${userData.LastName}`);\r\n                setPicture(icon)\r\n\r\n                //setPicture(userData.Photo === 'red-heart' ? redHeartImage : userData.Photo);\r\n            } catch (error) {\r\n                console.error('Error fetching user data:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    const handleSave = () => {\r\n        console.log({\r\n            name: name,\r\n            profession: profession,\r\n            github: github,\r\n            linkedin: linkedin,\r\n            description: description,\r\n            picture: picture\r\n        });\r\n\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className='auth-inner'>\r\n            <div className=\"Profile\">\r\n                <div className=\"PictureContainer\">\r\n                    <img className=\"Picture\" src={picture} alt=\"Profile\" />\r\n                </div>\r\n                <div className=\"Info\">\r\n                    {isEditing ? (\r\n                        <div>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={name}\r\n                                onChange={(event) => setName(event.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                value={profession}\r\n                                onChange={(event) => setProfession(event.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                value={github}\r\n                                onChange={(event) => setGithub(event.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                value={linkedin}\r\n                                onChange={(event) => setLinkedin(event.target.value)}\r\n                            />\r\n                            <textarea\r\n                                value={description}\r\n                                onChange={(event) => setDescription(event.target.value)}\r\n                            ></textarea>\r\n                            <button onClick={handleSave}>Save</button>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <h1>{name}</h1>\r\n                            <h3>{profession}</h3>\r\n                            <div className=\"Links\">\r\n                                <a href={github} target=\"_blank\" rel=\"noreferrer\">\r\n                                    Github\r\n                                </a>\r\n                                <a href={linkedin} target=\"_blank\" rel=\"noreferrer\">\r\n                                    LinkedIn\r\n                                </a>\r\n                            </div>\r\n                            <p>{description}</p>\r\n                            \r\n                            <p>\r\n                                <button onClick={() => setIsEditing(true)}>Edit</button>\r\n                               <Link to=\"/project-submit\" ><button>Submit Project</button></Link>\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\Search.js",["126","127"],[],"import './Search.css';\r\nimport { React, useState, classes } from \"react\";\r\nimport \"./App.css\";\r\nimport SearchBar from './components/SearchBar';\r\n\r\n\r\nconst Search = () => {\r\n\r\n      const handleSearch = (searchTerm) => {\r\n        console.log('Search:', searchTerm);\r\n      };\r\n\r\n      return (\r\n        <div className=\"search-bg\">\r\n                    <div className=\"illu\"><img src={require('./images/capfolio-illu.png')}  alt=\"Logo\" draggable='false'/></div>\r\n            <div className='headline'>A home dedicated to showcasing <span className='bright'>bright</span> futures</div>\r\n            <div className=\"webzen-logo\"><p>Made by the team at</p><img src={require('./images/webzen-logo-white.png')}  alt=\"Logo\" /></div>\r\n\r\n            <div className=\"main\">\r\n              <div className=\"search\"> \r\n                <SearchBar onSearch={handleSearch} />\r\n              </div> \r\n          </div>\r\n        \r\n        </div>\r\n      \r\n      );\r\n    };\r\n    \r\n  export default Search;\r\n  ","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\components\\likeButton.js",["128","129","130","131","132","133"],[],"import React, { useState, useEffect } from \"react\";\r\nimport cn from \"classnames\";\r\nimport { ReactComponent as Hand } from \"../images/hand.svg\";\r\n\r\nimport \"./likeStyles.css\";\r\n\r\nconst particleList = Array.from(Array(10));\r\n\r\nconst LikeButton2 = (props) => {\r\n\r\n    \r\n    const [liked, setLiked] = useState(null);\r\n    const [clicked, setClicked] = useState(null);\r\n    const [likes, setLikes] = useState('');\r\n\r\n\r\n    const getLikes = async () => {\r\n        const response = await fetch(\r\n            \"/projects/like?id=\" + props.likenumber\r\n        ).then((response) => response.json());\r\n\r\n        setLikes(response)\r\n   \r\n\r\n\r\n    };\r\n\r\n\r\n    const initialLikes = async () => {\r\n        const response = await fetch('/projects/ProjectsLiked?id=' + props.likenumber).then((response) => response.json());\r\n\r\n      \r\n        if (response[response.length - 1].hasLiked == '0') {\r\n            setLiked(false)\r\n            setClicked(false)\r\n           \r\n\r\n        }\r\n\r\n        if (response[response.length - 1].hasLiked == '1') {\r\n            setLiked(true)\r\n            setClicked(true)        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const checkLikes = async () => {\r\n        const response = await fetch('/projects/ProjectsLiked?id=' + props.likenumber).then((response) => response.json());\r\n\r\n        if (response[response.length - 1].hasLiked == '0') { \r\n          \r\n            newlike()\r\n            setLiked(true)\r\n            setClicked(true)\r\n\r\n        }\r\n\r\n        if (response[response.length - 1].hasLiked == '1') {\r\n            removeLike()\r\n            setLiked(false)\r\n            setClicked(false)\r\n        }\r\n\r\n    }\r\n\r\n    const newlike = async () => {\r\n        await fetch(\r\n            \"/projects/postLike\",{\r\n            method: 'POST',\r\n            headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                'projectId': props.likenumber\r\n            })\r\n        })\r\n    \r\n        getLikes();\r\n        \r\n    };\r\n\r\n\r\n    const removeLike = async () => {\r\n        await fetch(\r\n            \"projects/postDisLike\", {\r\n                method: 'DELETE',\r\n                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    'projectId': props.likenumber\r\n                })\r\n        })\r\n        getLikes();\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getLikes();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        initialLikes();\r\n    }, []);\r\n\r\n\r\n  \r\n\r\n\r\n\r\n    return (\r\n        <button\r\n\r\n            \r\n\r\n            onClick={() => { \r\n                checkLikes()\r\n           \r\n                \r\n                \r\n            }}\r\n            onAnimationEnd={() => setClicked(false)}\r\n            className={cn(\"like-button-wrapper\", {\r\n                liked,\r\n                clicked,\r\n            })}\r\n        >\r\n            {liked && (\r\n                <div className=\"particles\">\r\n                    {particleList.map((_, index) => (\r\n                        <div\r\n                            className=\"particle-rotate\"\r\n                            style={{\r\n                                transform: `rotate(${(360 / particleList.length) * index + 1\r\n                                    }deg)`,\r\n                            }}\r\n                        >\r\n                            <div className=\"particle-tick\" />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <div className=\"like-button\">\r\n                <Hand />\r\n                <span>Like</span>\r\n                <span className={cn(\"suffix\", { liked })}>d </span>\r\n                <span id='projectlike' className=\"likes-counter\">   | {likes && likes.map((like) => like.No_of_likes)}</span>\r\n            </div>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default LikeButton2;","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\ProjectGallery.js",["134","135","136","137","138","139"],[],"C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\Sidebar.js",["140","141","142","143","144","145"],[],"import \"./Sidebar.css\";\r\nimport React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport {\r\n  Collapse,\r\n  CButton,\r\n  CCollapse,\r\n  CCard,\r\n  CCardBody,\r\n} from \"@coreui/react\";\r\n\r\n\r\nconst Sidebar = ({ onApplyFilter }) => {\r\n    const startYears = [\r\n      { value: \"2020\", label: \"2020\" },\r\n      { value: \"2021\", label: \"2021\" },\r\n      { value: \"2022\", label: \"2022\" },\r\n      { value: \"2023\", label: \"2023\" },\r\n    ];\r\n\r\n    const startSemester = [\r\n        { value: \"Semester One\", label: \"Semester One\" },\r\n        { value: \"Semester Two\", label: \"Semester Two\" },\r\n      ];\r\n\r\n\r\n    const technologies = [\r\n        { value: \"React\", label: \"React\" },\r\n        { value: \"Javascript\", label: \"Javascript\" },\r\n        { value: \"HTML\", label: \"HTML\" },\r\n        { value: \"C#\", label: \"C#\" },\r\n      ];\r\n\r\n      const awarded = [\r\n        { value: \"None\", label: \"None\" },\r\n        { value: \"Excellence Award\", label: \"Excellence Award\" },\r\n        { value: \"Community Award\", label: \"Community Award\" },\r\n        { value: \"People's Choice Award\", label: \"People's Choice Award\" },\r\n      ];\r\n\r\n      const sortBy = [\r\n        { value: \"Latest to oldest\", label: \"Latest to oldest\" },\r\n        { value: \"Oldest to latest\", label: \"Oldest to latest\" },\r\n        { value: \"Highest to lowest likes\", label: \"Highest to lowest likes\" },\r\n        { value: \"Lowest to highest Likes\", label: \"Lowest to highest Likes\" },\r\n        { value: \"Alphabetical (A - Z)\", label: \"Alphabetical (A - Z)\" },\r\n        { value: \"Alphabetical (Z - A)\", label: \"Alphabetical (Z - A)\" },\r\n\r\n\r\n\r\n      ];\r\n\r\n      const [selectedYears, setSelectedYears] = useState([]);\r\n      const handleChangeYears = (selectedYears) => {\r\n        setSelectedYears(selectedYears);\r\n      };\r\n    \r\n      const [selectedSemesters, setSelectedSemesters] = useState([]);\r\n      const handleChangeSemesters = (selectedSemesters) => {\r\n        setSelectedSemesters(selectedSemesters);\r\n      };\r\n    \r\n      const [selectedTechnologies, setSelectedTechnologies] = useState([]);\r\n      const handleChangeTechnologies = (selectedTechnologies) => {\r\n        setSelectedTechnologies(selectedTechnologies);\r\n      };\r\n    \r\n      const [selectedAwards, setSelectedAwards] = useState([]);\r\n      const handleChangeAwards = (selectedAwards) => {\r\n        setSelectedAwards(selectedAwards);\r\n      };\r\n\r\n      const [selectedSortBy, setSelectedSortBy] = useState(null);\r\n      const handleChangeSortBy = (selectedSortBy) => {\r\n        setSelectedSortBy(selectedSortBy);\r\n      };\r\n    \r\n      const handleApplyFilter = () => {\r\n        const allSelectedOptions = [\r\n          ...selectedYears,\r\n          ...selectedSemesters,\r\n          ...selectedTechnologies,\r\n          ...selectedAwards,\r\n        ];\r\n        console.log(\"Selected Filters: \", allSelectedOptions);\r\n        console.log(\"Sort By: \", selectedSortBy);\r\n\r\n        // Call the FilteredProjectData function passed as a prop\r\n        if (typeof onApplyFilter === 'function') {\r\n          onApplyFilter();\r\n        }\r\n      };\r\n\r\n    const [selectedOption, setSelectedOption] = useState(\"\");\r\n    var handleChange = (selectedOption) => {\r\n        console.log(selectedOption);\r\n        setSelectedOption(selectedOption.value);\r\n      };\r\n\r\n      const [isClearable, setIsClearable] = useState(true);\r\n      const [visible, setVisible] = useState(false)\r\n\r\n      const animatedComponents = makeAnimated();\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className='filter-btn'>\r\n            <CButton href=\"#\" onClick={(event) => {\r\n            event.preventDefault()\r\n            setVisible(!visible)\r\n            }}>\r\n            Filter\r\n            </CButton>\r\n          </div>\r\n          <CCollapse visible={visible}>\r\n            <CCard className=\"mt-3\">\r\n              <CCardBody>\r\n                <div class='filter-bg'>\r\n                  <div className='bg-content-wrapper'>\r\n                    <div className=\"filters\">\r\n                        <div className=\"row\">\r\n                          <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                            <p>Years</p>\r\n                            <Select\r\n                              placeholder={<div>Years...</div>}\r\n                              components={animatedComponents}\r\n                              isMulti\r\n                              onChange={handleChangeYears}\r\n                              options={startYears}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                            <p>Semesters</p>\r\n                            <Select\r\n                              placeholder={<div>Semesters...</div>}\r\n                              components={animatedComponents}\r\n                              isMulti\r\n                              onChange={handleChangeSemesters}\r\n                              options={startSemester}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                            <p>Technologies</p>\r\n                            <Select\r\n                              placeholder={<div>Made with...</div>}\r\n                              components={animatedComponents}\r\n                              isMulti\r\n                              onChange={handleChangeTechnologies}\r\n                              options={technologies}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-3 me-0 w-25 col-xs-6\">\r\n                            <p>Awards</p>\r\n                            <Select\r\n                              placeholder={<div>Awarded with...</div>}\r\n                              components={animatedComponents}\r\n                              isMulti\r\n                              onChange={handleChangeAwards}\r\n                              options={awarded}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"mt-3 me-0 w-50 col-xs-6\">\r\n                              <p>Sort by</p>\r\n                              <Select\r\n                                defaultValue={{ label: \"Latest to oldest\", value: \"Latest to oldest\" }}\r\n                                className=\"basic-single\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"color\"\r\n                                onChange={handleChangeSortBy}\r\n                                options={sortBy}\r\n                              />\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"apply-filter-btn-wrapper\">\r\n                        <CButton className=\"apply-filter-btn\" onClick={handleApplyFilter}>\r\n                          Apply Filter\r\n                        </CButton>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n              </CCardBody>\r\n            </CCard>\r\n        </CCollapse>\r\n      </div> \r\n    </div>\r\n \r\n    );\r\n  };\r\n  \r\nexport default Sidebar;","C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\components\\awardBanner.js",[],[],"C:\\Users\\Kristen Coupe\\OneDrive\\Desktop\\Compsci 399\\Capfolio Git Repo\\project-team-11\\capfolio\\src\\components\\SearchBar.js",[],[],{"ruleId":"146","severity":1,"message":"147","line":1,"column":38,"nodeType":"148","messageId":"149","endLine":1,"endColumn":44},{"ruleId":"146","severity":1,"message":"150","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"151","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":21},{"ruleId":"146","severity":1,"message":"152","line":13,"column":10,"nodeType":"148","messageId":"149","endLine":13,"endColumn":19},{"ruleId":"146","severity":1,"message":"153","line":17,"column":5,"nodeType":"148","messageId":"149","endLine":17,"endColumn":11},{"ruleId":"146","severity":1,"message":"154","line":18,"column":5,"nodeType":"148","messageId":"149","endLine":18,"endColumn":11},{"ruleId":"146","severity":1,"message":"155","line":19,"column":5,"nodeType":"148","messageId":"149","endLine":19,"endColumn":13},{"ruleId":"146","severity":1,"message":"156","line":20,"column":5,"nodeType":"148","messageId":"149","endLine":20,"endColumn":16},{"ruleId":"146","severity":1,"message":"157","line":21,"column":5,"nodeType":"148","messageId":"149","endLine":21,"endColumn":11},{"ruleId":"146","severity":1,"message":"158","line":31,"column":12,"nodeType":"148","messageId":"149","endLine":31,"endColumn":17},{"ruleId":"146","severity":1,"message":"159","line":31,"column":19,"nodeType":"148","messageId":"149","endLine":31,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":87,"column":8,"nodeType":"162","endLine":87,"endColumn":10,"suggestions":"163"},{"ruleId":"160","severity":1,"message":"164","line":91,"column":8,"nodeType":"162","endLine":91,"endColumn":10,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":178,"column":32,"nodeType":"168","messageId":"169","endLine":178,"endColumn":77,"fix":"170"},{"ruleId":"171","severity":1,"message":"172","line":178,"column":78,"nodeType":"168","endLine":178,"endColumn":100},{"ruleId":"173","severity":1,"message":"174","line":254,"column":21,"nodeType":"168","endLine":254,"endColumn":120},{"ruleId":"146","severity":1,"message":"175","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":38},{"ruleId":"146","severity":1,"message":"176","line":1,"column":40,"nodeType":"148","messageId":"149","endLine":1,"endColumn":60},{"ruleId":"146","severity":1,"message":"156","line":6,"column":5,"nodeType":"148","messageId":"149","endLine":6,"endColumn":16},{"ruleId":"146","severity":1,"message":"177","line":14,"column":8,"nodeType":"148","messageId":"149","endLine":14,"endColumn":11},{"ruleId":"178","severity":1,"message":"179","line":137,"column":28,"nodeType":"180","messageId":"181","endLine":137,"endColumn":30},{"ruleId":"146","severity":1,"message":"182","line":20,"column":23,"nodeType":"148","messageId":"149","endLine":20,"endColumn":27},{"ruleId":"146","severity":1,"message":"183","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":129,"column":17,"nodeType":"168","endLine":129,"endColumn":74},{"ruleId":"184","severity":1,"message":"185","line":87,"column":24,"nodeType":"168","endLine":87,"endColumn":36},{"ruleId":"171","severity":1,"message":"172","line":94,"column":17,"nodeType":"168","endLine":94,"endColumn":74},{"ruleId":"146","severity":1,"message":"186","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":20},{"ruleId":"146","severity":1,"message":"187","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":21},{"ruleId":"146","severity":1,"message":"188","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":21},{"ruleId":"146","severity":1,"message":"189","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":25},{"ruleId":"146","severity":1,"message":"190","line":2,"column":27,"nodeType":"148","messageId":"149","endLine":2,"endColumn":34},{"ruleId":"178","severity":1,"message":"179","line":33,"column":52,"nodeType":"180","messageId":"181","endLine":33,"endColumn":54},{"ruleId":"178","severity":1,"message":"179","line":40,"column":52,"nodeType":"180","messageId":"181","endLine":40,"endColumn":54},{"ruleId":"178","severity":1,"message":"179","line":51,"column":52,"nodeType":"180","messageId":"181","endLine":51,"endColumn":54},{"ruleId":"178","severity":1,"message":"179","line":59,"column":52,"nodeType":"180","messageId":"181","endLine":59,"endColumn":54},{"ruleId":"160","severity":1,"message":"191","line":97,"column":8,"nodeType":"162","endLine":97,"endColumn":10,"suggestions":"192"},{"ruleId":"160","severity":1,"message":"193","line":101,"column":8,"nodeType":"162","endLine":101,"endColumn":10,"suggestions":"194"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":38,"nodeType":"148","messageId":"149","endLine":1,"endColumn":44},{"ruleId":"146","severity":1,"message":"195","line":3,"column":16,"nodeType":"148","messageId":"149","endLine":3,"endColumn":24},{"ruleId":"146","severity":1,"message":"196","line":3,"column":26,"nodeType":"148","messageId":"149","endLine":3,"endColumn":40},{"ruleId":"146","severity":1,"message":"186","line":3,"column":42,"nodeType":"148","messageId":"149","endLine":3,"endColumn":52},{"ruleId":"146","severity":1,"message":"197","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":18},{"ruleId":"146","severity":1,"message":"198","line":4,"column":29,"nodeType":"148","messageId":"149","endLine":4,"endColumn":38},{"ruleId":"146","severity":1,"message":"199","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":16},{"ruleId":"146","severity":1,"message":"197","line":8,"column":3,"nodeType":"148","messageId":"149","endLine":8,"endColumn":11},{"ruleId":"146","severity":1,"message":"200","line":97,"column":12,"nodeType":"148","messageId":"149","endLine":97,"endColumn":26},{"ruleId":"146","severity":1,"message":"201","line":98,"column":9,"nodeType":"148","messageId":"149","endLine":98,"endColumn":21},{"ruleId":"146","severity":1,"message":"202","line":103,"column":14,"nodeType":"148","messageId":"149","endLine":103,"endColumn":25},{"ruleId":"146","severity":1,"message":"203","line":103,"column":27,"nodeType":"148","messageId":"149","endLine":103,"endColumn":41},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'redheart' is defined but never used.","'submitcomment' is defined but never used.","'withTheme' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBInput' is defined but never used.","'MDBCheckbox' is defined but never used.","'MDBBtn' is defined but never used.","'likes' is assigned a value but never used.","'setLikes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.","ArrayExpression",["204"],"React Hook useEffect has a missing dependency: 'getProject'. Either include it or remove the dependency array.",["205"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"206","text":"207"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'ChangeEvent' is defined but never used.","'KeyboardEventHandler' is defined but never used.","'App' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'Sidebar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'redHeartImage' is defined but never used.","'useState' is defined but never used.","'classes' is defined but never used.","React Hook useEffect has a missing dependency: 'getLikes'. Either include it or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'initialLikes'. Either include it or remove the dependency array.",["209"],"'useMatch' is defined but never used.","'useResolvedPat' is defined but never used.","'Collapse' is defined but never used.","'CCollapse' is defined but never used.","'ReactDOM' is defined but never used.","'selectedOption' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'isClearable' is assigned a value but never used.","'setIsClearable' is assigned a value but never used.",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},[5106,5106]," rel=\"noreferrer\"",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [getComments]",{"range":"218","text":"219"},"Update the dependencies array to be: [getProject]",{"range":"220","text":"221"},"Update the dependencies array to be: [getLikes]",{"range":"222","text":"223"},"Update the dependencies array to be: [initialLikes]",{"range":"224","text":"225"},[2329,2331],"[getComments]",[2394,2396],"[getProject]",[2426,2428],"[getLikes]",[2489,2491],"[initialLikes]"]